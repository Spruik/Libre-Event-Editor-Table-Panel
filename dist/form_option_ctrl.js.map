{"version":3,"sources":["../src/form_option_ctrl.js"],"names":["utils","EditEventCtrl","MaintenanceCtrl","FormOptionCtrl","ctrl","timestamp","panelCtrl","currentEvent","allEvents","allData","equipment","data","datalist","reasonCodes","categories","reasons","parentChildren","hasQueryData","show","measurement","panel","endPoint","influxUrl","influxHost","measurementResult","sure","get","isResultOK","isMeasureDataOK","parseData","record","findCurrentEvent","e","console","log","equipmentEndPoint","equipmentUrl","postgRestHost","line","equipmentResult","reduce","arr","equip","obj","value","text","production_line","push","reasonCodeEndPoint","reasonCodeUrl","resonCodeResult","parseReasonCodes","allCategories","map","x","category_id","Array","from","Set","filter","reason_id","parent_reason_id","category","reason","parent","child","res","series","results","cols","columns","toLowerCase","rows","values","i","length","row","k","current","time","Math","round","result","source","ok","alert","error","isValidVal"],"mappings":"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","file":"form_option_ctrl.js","sourcesContent":["import * as utils from './utils'\nimport {EditEventCtrl} from './edit_event_ctrl'\nimport {MaintenanceCtrl} from './maintenance_ctrl'\n\nexport class FormOptionCtrl {\n  /** @ngInject */\n  constructor(ctrl, timestamp) {\n    this.panelCtrl = ctrl;\n    this.currentEvent = { timestamp }\n    this.allEvents = ctrl.allData\n    this.equipment = { data: null, datalist: null }\n    this.reasonCodes = { data: null, categories: null, reasons: null, parentChildren: null}\n  }\n\n  async show() {\n    const hasQueryData = await this.hasQueryData()\n    if (!hasQueryData) { return }\n    // utils.showModal('form_option_form.html', this, 'editOrMaintenance-modal')\n    new EditEventCtrl(this).show()\n  }\n\n  async hasQueryData() {\n    const measurement = this.panelCtrl.panel.endPoint\n    const timestamp = this.currentEvent.timestamp\n    const influxUrl = utils.influxHost + `query?pretty=true&db=smart_factory&q=select * from ${measurement} where time = ${timestamp}`\n    const measurementResult = await utils.sure(utils.get(influxUrl))\n    if (!this.isResultOK(measurementResult, `influxdb - ${measurement}`)) { return false }\n    if (!this.isMeasureDataOK(measurementResult, `influxdb - ${measurement}`)) { return false }\n    this.parseData(measurementResult) // make results more structured, and store into cur and next\n\n    try{\n      this.currentEvent.record = this.findCurrentEvent(this.currentEvent)\n    }catch(e) {\n      console.log('e', e)\n      return false\n    }\n\n    const equipmentEndPoint = this.panelCtrl.panel.equipmentEndPoint\n    const equipmentUrl = utils.postgRestHost + `${equipmentEndPoint}?production_line=eq.${this.currentEvent.record.line}&equipment=not.is.null`\n    const equipmentResult = await utils.sure(utils.get(equipmentUrl))\n    if (!this.isResultOK(equipmentResult, `postgresDB - ${equipmentEndPoint}`)) { return false }\n    this.equipment.data = equipmentResult.data\n    this.equipment.datalist = this.equipment.data.reduce((arr, equip) => {\n      const obj = {value: equip, text: equip.production_line + ' | ' + equip.equipment}\n      arr.push(obj)\n      return arr\n    }, [])\n\n    const reasonCodeEndPoint = this.panelCtrl.panel.reasonCodeEndPoint\n    const reasonCodeUrl = utils.postgRestHost + reasonCodeEndPoint\n    const resonCodeResult = await utils.sure(utils.get(reasonCodeUrl))\n    if (!this.isResultOK(resonCodeResult, `postgresDB - ${reasonCodeEndPoint}`)) { return false }\n    this.parseReasonCodes(resonCodeResult.data)\n\n    return true\n  }\n\n  parseReasonCodes(data) {\n    this.reasonCodes.data = data\n    const allCategories = data.map(x => x.category_id)\n    const categories = Array.from(new Set(allCategories))\n    this.reasonCodes.categories = categories\n    this.reasonCodes.reasons = data.filter(x => x.reason_id && !x.parent_reason_id).map(x => {\n      return {\n        category: x.category_id,\n        reason: x.reason_id\n      }\n    })\n    this.reasonCodes.parentChildren = data.filter(x => x.parent_reason_id).map(x => {\n      return {\n        category: x.category_id,\n        parent: x.parent_reason_id,\n        child: x.reason_id\n      }\n    })\n  }\n\n  parseData(res) {\n    const series = res.data.results[0].series[0]\n    const cols = series.columns.map(x => x.toLowerCase())\n    const rows = series.values\n    let data = []\n    for (let i = 0; i < rows.length; i++) {\n      let row = {}\n      for (let k = 0; k < cols.length; k++) {\n        row[cols[k]] = rows[i][k]\n      }\n      data.push(row)\n    }\n    \n    this.currentEvent.record = data[0]\n  }\n\n  findCurrentEvent(current) {\n    const res = this.allEvents.filter(x => x.time === Math.round(current.timestamp / 1000000))\n    return res[0]\n  }\n\n  isResultOK(result, source) {\n    if (!result.ok){\n      utils.alert('error', 'Error', `Unexpected error occurred whiling getting data from ${source}, please try again`)\n      console.log(result.error)\n      return false\n    }else {\n      return true\n    }\n  }\n\n  isMeasureDataOK(result, source) {\n    if (!result.data.results[0].series) {\n      utils.alert('error', 'Error', `${source} is OK but returns EMPTY result, please make sure the data config measurement matches the one you put in the query and try again`)\n      return false\n    }\n    return true\n  }\n\n  onEditClick() {\n    new EditEventCtrl(this).show()\n  }\n\n  onMaintainClick() {\n    if(utils.isValidVal(this.currentEvent.record.category)) {\n      new MaintenanceCtrl(this).show()\n    } else {\n      utils.alert('error', 'Warning', 'Requesting maintenance requires the Event Category to be specified')\n      new EditEventCtrl(this).show()\n    }\n  }\n}"]}