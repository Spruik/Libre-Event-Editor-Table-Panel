{"version":3,"sources":["../src/form_option_ctrl.js"],"names":["utils","EditEventCtrl","MaintenanceCtrl","FormOptionCtrl","ctrl","timestamp","panelCtrl","currentEvent","allEvents","allData","equipment","data","datalist","reasonCodes","categories","reasons","parentChildren","hasQueryData","show","measurement","panel","endPoint","console","log","influxUrl","influxHost","measurementResult","sure","get","isResultOK","isMeasureDataOK","parseData","record","findCurrentEvent","e","equipmentEndPoint","equipmentUrl","postgRestHost","line","equipmentResult","reduce","arr","equip","obj","value","text","production_line","push","reasonCodeEndPoint","reasonCodeUrl","resonCodeResult","parseReasonCodes","allCategories","map","x","category_id","Array","from","Set","filter","reason_id","parent_reason_id","category","reason","parent","child","res","series","results","cols","columns","toLowerCase","rows","values","i","length","row","k","current","time","Math","round","result","source","ok","alert","error","isValidVal"],"mappings":"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","file":"form_option_ctrl.js","sourcesContent":["import * as utils from './utils';\nimport { EditEventCtrl } from './edit_event_ctrl';\nimport { MaintenanceCtrl } from './maintenance_ctrl';\n\nexport class FormOptionCtrl {\n\t/** @ngInject */\n\tconstructor(ctrl, timestamp) {\n\t\tthis.panelCtrl = ctrl;\n\t\tthis.currentEvent = { timestamp };\n\t\tthis.allEvents = ctrl.allData;\n\t\tthis.equipment = { data: null, datalist: null };\n\t\tthis.reasonCodes = { data: null, categories: null, reasons: null, parentChildren: null };\n\t}\n\n\tasync show() {\n\t\tconst hasQueryData = await this.hasQueryData();\n\t\tif (!hasQueryData) {\n\t\t\treturn;\n\t\t}\n\t\t// utils.showModal('form_option_form.html', this, 'editOrMaintenance-modal')\n\t\tnew EditEventCtrl(this).show();\n\t}\n\tasync hasQueryData() {\n\t\tconst measurement = this.panelCtrl.panel.endPoint;\n\t\tconst timestamp = this.currentEvent.timestamp;\n\t\tconsole.log(timestamp);\n\t\tconst influxUrl =\n\t\t\tutils.influxHost +\n\t\t\t`query?pretty=true&db=smart_factory&q=select * from ${measurement} where time = ${timestamp}`;\n\t\tconst measurementResult = await utils.sure(utils.get(influxUrl));\n\t\tconsole.log(measurementResult);\n\t\tif (!this.isResultOK(measurementResult, `influxdb - ${measurement}`)) {\n\t\t\treturn false;\n\t\t}\n\t\tif (!this.isMeasureDataOK(measurementResult, `influxdb - ${measurement}`)) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.parseData(measurementResult); // make results more structured, and store into cur and next\n\n\t\ttry {\n\t\t\tthis.currentEvent.record = this.findCurrentEvent(this.currentEvent);\n\t\t} catch (e) {\n\t\t\tconsole.log('e', e);\n\t\t\treturn false;\n\t\t}\n\n\t\tconst equipmentEndPoint = this.panelCtrl.panel.equipmentEndPoint;\n\t\tconst equipmentUrl =\n\t\t\tutils.postgRestHost +\n\t\t\t`${equipmentEndPoint}?production_line=eq.${this.currentEvent.record.line}&equipment=not.is.null`;\n\t\tconst equipmentResult = await utils.sure(utils.get(equipmentUrl));\n\t\tif (!this.isResultOK(equipmentResult, `postgresDB - ${equipmentEndPoint}`)) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.equipment.data = equipmentResult.data;\n\t\tthis.equipment.datalist = this.equipment.data.reduce((arr, equip) => {\n\t\t\tconst obj = { value: equip, text: equip.production_line + ' | ' + equip.equipment };\n\t\t\tarr.push(obj);\n\t\t\treturn arr;\n\t\t}, []);\n\n\t\tconst reasonCodeEndPoint = this.panelCtrl.panel.reasonCodeEndPoint;\n\t\tconst reasonCodeUrl = utils.postgRestHost + reasonCodeEndPoint;\n\t\tconst resonCodeResult = await utils.sure(utils.get(reasonCodeUrl));\n\t\tif (!this.isResultOK(resonCodeResult, `postgresDB - ${reasonCodeEndPoint}`)) {\n\t\t\treturn false;\n\t\t}\n\t\tthis.parseReasonCodes(resonCodeResult.data);\n\n\t\treturn true;\n\t}\n\n\tparseReasonCodes(data) {\n\t\tthis.reasonCodes.data = data;\n\t\tconst allCategories = data.map((x) => x.category_id);\n\t\tconst categories = Array.from(new Set(allCategories));\n\t\tthis.reasonCodes.categories = categories;\n\t\tthis.reasonCodes.reasons = data.filter((x) => x.reason_id && !x.parent_reason_id).map((x) => {\n\t\t\treturn {\n\t\t\t\tcategory: x.category_id,\n\t\t\t\treason: x.reason_id\n\t\t\t};\n\t\t});\n\t\tthis.reasonCodes.parentChildren = data.filter((x) => x.parent_reason_id).map((x) => {\n\t\t\treturn {\n\t\t\t\tcategory: x.category_id,\n\t\t\t\tparent: x.parent_reason_id,\n\t\t\t\tchild: x.reason_id\n\t\t\t};\n\t\t});\n\t}\n\n\tparseData(res) {\n\t\tconst series = res.data.results[0].series[0];\n\t\tconst cols = series.columns.map((x) => x.toLowerCase());\n\t\tconst rows = series.values;\n\t\tlet data = [];\n\t\tfor (let i = 0; i < rows.length; i++) {\n\t\t\tlet row = {};\n\t\t\tfor (let k = 0; k < cols.length; k++) {\n\t\t\t\trow[cols[k]] = rows[i][k];\n\t\t\t}\n\t\t\tdata.push(row);\n\t\t}\n\n\t\tthis.currentEvent.record = data[0];\n\t}\n\n\tfindCurrentEvent(current) {\n\t\tconst res = this.allEvents.filter((x) => x.time === Math.round(current.timestamp / 1000000));\n\t\treturn res[0];\n\t}\n\n\tisResultOK(result, source) {\n\t\tif (!result.ok) {\n\t\t\tutils.alert(\n\t\t\t\t'error',\n\t\t\t\t'Error',\n\t\t\t\t`Unexpected error occurred whiling getting data from ${source}, please try again`\n\t\t\t);\n\t\t\tconsole.log(result.error);\n\t\t\treturn false;\n\t\t} else {\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tisMeasureDataOK(result, source) {\n\t\tif (!result.data.results[0].series) {\n\t\t\tutils.alert(\n\t\t\t\t'error',\n\t\t\t\t'Error',\n\t\t\t\t`${source} is OK but returns EMPTY result, please make sure the data config measurement matches the one you put in the query and try again`\n\t\t\t);\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tonEditClick() {\n\t\tnew EditEventCtrl(this).show();\n\t}\n\n\tonMaintainClick() {\n\t\tif (utils.isValidVal(this.currentEvent.record.category)) {\n\t\t\tnew MaintenanceCtrl(this).show();\n\t\t} else {\n\t\t\tutils.alert('error', 'Warning', 'Requesting maintenance requires the Event Category to be specified');\n\t\t\tnew EditEventCtrl(this).show();\n\t\t}\n\t}\n}\n"]}