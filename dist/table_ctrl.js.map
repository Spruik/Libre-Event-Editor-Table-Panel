{"version":3,"sources":["../src/table_ctrl.js"],"names":["_","$","moment","FileExport","MetricsPanelCtrl","transformDataToTable","utils","tablePanelEditor","columnOptionsTab","TableRenderer","FormOptionCtrl","_ctrl","panelDefaults","targets","transform","pageSize","showHeader","styles","type","pattern","alias","dateFormat","headerColor","unit","decimals","colors","colorMode","thresholds","columns","scroll","fontSize","sort","col","desc","durationFilter","hideExecute","reasonCodeEndPoint","equipmentEndPoint","endPoint","TableCtrl","$scope","$injector","templateSrv","annotationsSrv","$sanitize","variableSrv","$sce","pageIndex","panel","fields","defaults","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","camundaUrl","trustAsResourceUrl","camundaHost","measurementOK","document","off","rawData","map","index","td","childNodes","length","nodeValue","text","timeIndex","ctrl","colDimensions","indexOf","alert","date","timestamp","valueOf","show","errorLogged","durationMissingErrorLogged","postgresConnectionErrorLogged","parentUpdated","addEditorTab","actions","push","click","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","dataRaw","render","dataList","handle","filterExecute","isNaN","filterDuration","checkEndPoint","filteredData","undefined","indexOfexecute","findIndex","x","toLowerCase","filteredRows","rows","filter","row","minDur","minDurVal","duration","cols","reduce","arr","allRecords","getRecords","allTimestamps","record","time","recordsToUpdate","forEach","difference","Date","getTime","getDuration","line","getInfluxLine","url","influxHost","post","catch","console","log","e","records","i","k","key","influxUrl","get","res","results","series","includes","milSecs","parseInt","daysDiff","Math","floor","hrsDiff","minsDiff","slice","secsDiff","timeToAdd","durationInt","measurement","addSlash","site","area","stopped","idle","execute","held","complete","status","machinestate","actual_rate","rid","MachineState","parentReason","category","reason","split","table","renderer","isTimezoneUtc","colIndex","scope","$new","tableData","render_values","publishAppEvent","templateHtml","modalClass","elem","attrs","pageCount","getTableHeight","panelHeight","height","appendTableRows","tbodyElem","setTable","empty","html","switchPage","el","currentTarget","renderPanel","appendPaginationControls","footerElem","ceil","startPage","max","endPage","min","paginationList","activeClass","pageLinkElem","append","panelElem","parents","rootElem","find","css","addClass","hidden","tooltip","selector","addFilterClicked","filterData","options","column","value","operator","setAdhocFilter","unbindDestroy","$on","renderData","renderingCompleted","refreshPanel","refresh","getQueryMeasurement","getReasonCodeEndPoint","getEquipmentEndPoint","isReadyToWriteInData","templateUrl"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAOA,O;;AACAC,O;;AACAC,Y;;AACKC,gB;;AACJC,sB,kBAAAA,gB;;AACAC,0B,iBAAAA,oB;;AACIC,W;;AACJC,sB,WAAAA,gB;;AACAC,sB,mBAAAA,gB;;AACAC,mB,aAAAA,a;;AACAC,oB,qBAAAA,c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMJC,W;AAEEC,mB,GAAgB;AACpBC,iBAAS,CAAC,EAAD,CADW;AAEpBC,mBAAW,uBAFS;AAGpBC,kBAAU,IAHU;AAIpBC,oBAAY,IAJQ;AAKpBC,gBAAQ,CACN;AACEC,gBAAM,MADR;AAEEC,mBAAS,MAFX;AAGEC,iBAAO,MAHT;AAIEC,sBAAY,yBAJd;AAKEC,uBAAa;AALf,SADM,EAQN;AACEC,gBAAM,OADR;AAEEL,gBAAM,QAFR;AAGEE,iBAAO,EAHT;AAIEI,oBAAU,CAJZ;AAKEF,uBAAa,uBALf;AAMEG,kBAAQ,CAAC,wBAAD,EAA2B,0BAA3B,EAAuD,yBAAvD,CANV;AAOEC,qBAAW,IAPb;AAQEP,mBAAS,MARX;AASEQ,sBAAY;AATd,SARM,CALY;AAyBpBC,iBAAS,EAzBW;AA0BpBC,gBAAQ,IA1BY;AA2BpBC,kBAAU,MA3BU;AA4BpBC,cAAM,EAAEC,KAAK,CAAP,EAAUC,MAAM,IAAhB,EA5Bc;AA6BpBC,wBAAgB,CA7BI;AA8BpBC,qBAAa,IA9BO;AA+BpBC,4BAAoB,aA/BA;AAgCpBC,2BAAmB,WAhCC;AAiCpBC,kBAAU;AAjCU,O;;2BAoCTC,S;;;AAEX,2BAAYC,MAAZ,EAAoBC,SAApB,EAA+BC,WAA/B,EAA4CC,cAA5C,EAA4DC,SAA5D,EAAuEC,WAAvE,EAAoFC,IAApF,EAA0F;AAAA;;AAAA,4HAClFN,MADkF,EAC1EC,SAD0E;;AAGxF,gBAAKM,SAAL,GAAiB,CAAjB;;AAEA,cAAI,MAAKC,KAAL,CAAW/B,MAAX,KAAsB,KAAK,CAA/B,EAAkC;AAChC,kBAAK+B,KAAL,CAAW/B,MAAX,GAAoB,MAAK+B,KAAL,CAAWpB,OAA/B;AACA,kBAAKoB,KAAL,CAAWpB,OAAX,GAAqB,MAAKoB,KAAL,CAAWC,MAAhC;AACA,mBAAO,MAAKD,KAAL,CAAWpB,OAAlB;AACA,mBAAO,MAAKoB,KAAL,CAAWC,MAAlB;AACD;;AAEDjD,YAAEkD,QAAF,CAAW,MAAKF,KAAhB,EAAuBpC,aAAvB;;AAEA,gBAAKuC,MAAL,CAAYC,EAAZ,CAAe,eAAf,EAAgC,MAAKC,cAAL,CAAoBC,IAApB,OAAhC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,YAAf,EAA6B,MAAKG,WAAL,CAAiBD,IAAjB,OAA7B;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKC,cAAL,CAAoBC,IAApB,OAArC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,gBAAf,EAAiC,MAAKI,cAAL,CAAoBF,IAApB,OAAjC;AACA,gBAAKH,MAAL,CAAYC,EAAZ,CAAe,oBAAf,EAAqC,MAAKK,kBAAL,CAAwBH,IAAxB,OAArC;;AAEA,gBAAKN,KAAL,CAAWU,UAAX,GAAwBZ,KAAKa,kBAAL,CAAwBrD,MAAMsD,WAA9B,CAAxB;AACA,gBAAKZ,KAAL,CAAWa,aAAX,GAA2B,KAA3B;;AAEA5D,YAAE6D,QAAF,EAAYC,GAAZ,CAAgB,OAAhB,EAAyB,uCAAzB;AACA;AACA9D,YAAE6D,QAAF,EAAYV,EAAZ,CAAe,OAAf,EAAwB,uCAAxB,EAAiE,YAAY;AAC3E,gBAAMY,UAAU/D,EAAE,IAAF,EAAQ,IAAR,EAAcgE,GAAd,CAAkB,UAACC,KAAD,EAAQC,EAAR,EAAa;;AAE7C,kBAAIA,GAAGC,UAAH,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AAC9B,uBAAOF,GAAGC,UAAH,CAAc,CAAd,EAAiBE,SAAxB;AACD,eAFD,MAEM,IAAIH,GAAGC,UAAH,CAAcC,MAAd,KAAyB,CAA7B,EAAgC;AACpC,uBAAOpE,EAAEkE,EAAF,EAAMI,IAAN,EAAP;AACD,eAFK,MAEA;AACJ,uBAAO,EAAP;AACD;AAEF,aAVe,CAAhB;;AAYA,gBAAMC,YAAYhC,OAAOiC,IAAP,CAAYC,aAAZ,CAA0BC,OAA1B,CAAkC,MAAlC,CAAlB;AACA,gBAAI,CAAC,CAACH,SAAN,EAAiB;AACflE,oBAAMsE,KAAN,CAAY,OAAZ,EAAqB,OAArB,EAA8B,kIAA9B;AACA;AACD,aAHD,MAGM;AACJ,kBAAMC,OAAOb,QAAQQ,SAAR,CAAb;AACA,kBAAMM,YAAY5E,OAAO2E,IAAP,EAAaE,OAAb,KAAyB,OAA3C;AACA,kBAAIrE,cAAJ,CAAmB8B,OAAOiC,IAA1B,EAAgCK,SAAhC,EAA2CE,IAA3C;AACD;AACF,WAtBD;;AAwBA,gBAAKC,WAAL,GAAmB,KAAnB;AACA,gBAAKC,0BAAL,GAAkC,KAAlC;AACA,gBAAKC,6BAAL,GAAqC,KAArC;AACA,gBAAKC,aAAL,GAAqB,KAArB;AApDwF;AAqDzF;;;;2CAEgB;AACf,iBAAKC,YAAL,CAAkB,SAAlB,EAA6B9E,gBAA7B,EAA+C,CAA/C;AACA,iBAAK8E,YAAL,CAAkB,eAAlB,EAAmC7E,gBAAnC,EAAqD,CAArD;AACD;;;6CAEkB8E,O,EAAS;AAC1BA,oBAAQC,IAAR,CAAa,EAAEhB,MAAM,YAAR,EAAsBiB,OAAO,kBAA7B,EAAb;AACD;;;uCAEYC,U,EAAY;AACvB,iBAAK1C,SAAL,GAAiB,CAAjB;;AAEA,gBAAI,KAAKC,KAAL,CAAWlC,SAAX,KAAyB,aAA7B,EAA4C;AAC1C,mBAAK4E,iBAAL;AACA,qBAAO,KAAK/C,cAAL,CACJgD,cADI,CACW;AACdC,2BAAW,KAAKA,SADF;AAEd5C,uBAAO,KAAKA,KAFE;AAGd6C,uBAAO,KAAKA;AAHE,eADX,EAMJC,IANI,CAMC,uBAAe;AACnB,uBAAO,EAAEC,MAAMC,WAAR,EAAP;AACD,eARI,CAAP;AASD;;AAED,sIAA0BP,UAA1B;AACD;;;sCAEWQ,G,EAAK;AACf,iBAAKC,OAAL,GAAe,EAAf;AACA,iBAAKC,MAAL;AACD;;;yCAEcC,Q,EAAU;AACvB,gBAAIA,SAAS/B,MAAT,KAAoB,CAAxB,EAA2B;AACzB,mBAAKgC,MAAL,CAAYD,SAAS,CAAT,CAAZ;AACD;;AAED,gBAAG,KAAKpD,KAAL,CAAWb,WAAd,EAA0B;AACxB,kBAAIiE,SAAS/B,MAAT,KAAoB,CAAxB,EAA2B;AACvB+B,2BAAW,KAAKE,aAAL,CAAmBF,QAAnB,CAAX;AACH;AACF;;AAED;AACA,gBAAIA,SAAS/B,MAAT,KAAoB,CAAxB,EAA2B;AACzB,kBAAI,KAAKrB,KAAL,CAAWd,cAAf,EAA+B;AAC7B,oBAAIqE,MAAM,KAAKvD,KAAL,CAAWd,cAAjB,CAAJ,EAAsC;AACpC,uBAAKc,KAAL,CAAWd,cAAX,GAA4B,CAA5B;AACD;AACDkE,2BAAW,KAAKI,cAAL,CAAoB,KAAKxD,KAAL,CAAWd,cAA/B,EAA+CkE,QAA/C,CAAX;AACD;AACF;;AAED,iBAAKF,OAAL,GAAeE,QAAf;AACA,iBAAKrD,SAAL,GAAiB,CAAjB;AACA;AACA,gBAAI,KAAKmD,OAAL,IAAgB,KAAKA,OAAL,CAAa7B,MAAjC,EAAyC;AACvC,kBAAI,KAAK6B,OAAL,CAAa,CAAb,EAAgBhF,IAAhB,KAAyB,OAA7B,EAAsC;AACpC,qBAAK8B,KAAL,CAAWlC,SAAX,GAAuB,OAAvB;AACD,eAFD,MAEO;AACL,oBAAI,KAAKoF,OAAL,CAAa,CAAb,EAAgBhF,IAAhB,KAAyB,MAA7B,EAAqC;AACnC,uBAAK8B,KAAL,CAAWlC,SAAX,GAAuB,MAAvB;AACD,iBAFD,MAEO;AACL,sBAAI,KAAKkC,KAAL,CAAWlC,SAAX,KAAyB,OAAzB,IAAoC,KAAKkC,KAAL,CAAWlC,SAAX,KAAyB,MAAjE,EAAyE;AACvE,yBAAKkC,KAAL,CAAWlC,SAAX,GAAuB,oBAAvB;AACD;AACF;AACF;AACF;;AAED,iBAAK2F,aAAL,CAAmB,KAAKzD,KAAL,CAAWV,QAA9B;AACA,iBAAK6D,MAAL;AACD;;;wCAEaJ,I,EAAK;AACjB,gBAAIW,qBAAJ;AACA,gBAAIX,KAAK,CAAL,EAAQnE,OAAR,KAAoB,IAApB,IAA4BmE,KAAK,CAAL,EAAQnE,OAAR,KAAoB+E,SAApD,EAA+D;AAC7D,kBAAIC,iBAAiBb,KAAK,CAAL,EAAQnE,OAAR,CAAgBiF,SAAhB,CAA0B;AAAA,uBAAKC,EAAEvC,IAAF,CAAOwC,WAAP,OAAyB,SAA9B;AAAA,eAA1B,CAArB;AACA,kBAAIC,eAAejB,KAAK,CAAL,EAAQkB,IAAR,CAAaC,MAAb,CAAoB;AAAA,uBAAOC,IAAIP,cAAJ,MAAwB,CAA/B;AAAA,eAApB,CAAnB;AACAb,mBAAK,CAAL,EAAQkB,IAAR,GAAeD,YAAf;AACD;AACDN,2BAAeX,IAAf;AACA,mBAAOW,YAAP;AACD;;;yCAEcU,M,EAAQrB,I,EAAK;AAC1B,gBAAMsB,YAAYnH,OAAOoH,QAAP,CAAgBF,MAAhB,EAAwB,SAAxB,EAAmCrC,OAAnC,EAAlB;AACA,gBAAI2B,qBAAJ;AACA,gBAAIX,KAAK,CAAL,EAAQnE,OAAR,KAAoB,IAApB,IAA4BmE,KAAK,CAAL,EAAQnE,OAAR,KAAoB+E,SAApD,EAA+D;AAC7D,kBAAIzC,QAAQ6B,KAAK,CAAL,EAAQnE,OAAR,CAAgBiF,SAAhB,CAA0B;AAAA,uBAAKC,EAAEvC,IAAF,CAAOwC,WAAP,OAAyB,aAA9B;AAAA,eAA1B,CAAZ;AACA,kBAAI,CAAC,CAAC7C,KAAN,EAAa;AAAE,uBAAO6B,IAAP;AAAa;AAC5B,kBAAIiB,eAAejB,KAAK,CAAL,EAAQkB,IAAR,CAAaC,MAAb,CAAoB;AAAA,uBAAOC,IAAIjD,KAAJ,KAAcmD,SAArB;AAAA,eAApB,CAAnB;AACAtB,mBAAK,CAAL,EAAQkB,IAAR,GAAeD,YAAf;AACD;AACDN,2BAAeX,IAAf;AACA,mBAAOW,YAAP;AACD;;;iCAEMX,I,EAAK;AAAA;;AACV,gBAAIA,SAASY,SAAb,EAAwB;AACtB,kBAAIZ,KAAK7E,IAAL,KAAc,OAAlB,EAA2B;AACzB,oBAAIqG,OAAOxB,KAAKnE,OAAL,CAAa4F,MAAb,CAAoB,UAACC,GAAD,EAAMzF,GAAN,EAAc;AAC3C,sBAAIuC,OAAOvC,IAAIuC,IAAJ,CAASwC,WAAT,EAAX;AACAU,sBAAIlC,IAAJ,CAAShB,IAAT;AACA,yBAAOkD,GAAP;AACD,iBAJU,EAIR,EAJQ,CAAX;AAKA,oBAAIF,KAAK5C,OAAL,CAAa,UAAb,MAA6B,CAAC,CAAlC,EAAqC;AACnC;AACA,sBAAI+C,aAAa,KAAKC,UAAL,CAAgBJ,IAAhB,EAAsBxB,KAAKkB,IAA3B,CAAjB;AACA;AACA,sBAAIW,gBAAgBF,WAAWF,MAAX,CAAkB,UAACC,GAAD,EAAMI,MAAN,EAAiB;AACrD,wBAAI/C,YAAY+C,OAAOC,IAAvB;AACAL,wBAAIlC,IAAJ,CAAST,SAAT;AACA,2BAAO2C,GAAP;AACD,mBAJmB,EAIjB,EAJiB,CAApB;AAKA;AACA,sBAAIM,kBAAkBL,WAAWR,MAAX,CAAkB;AAAA,2BAAUW,OAAOP,QAAP,KAAoB,IAApB,IAA4BO,OAAOP,QAAP,KAAoBX,SAA1D;AAAA,mBAAlB,CAAtB;AACA,sBAAIoB,gBAAgB1D,MAAhB,KAA2B,CAA/B,EAAkC;AAChC;AACA0D,oCAAgBxC,IAAhB,CAAqBmC,WAAWA,WAAWrD,MAAX,GAAoB,CAA/B,CAArB;AACD;AACD,sBAAI0D,gBAAgBA,gBAAgB1D,MAAhB,GAAwB,CAAxC,EAA2CyD,IAA3C,KAAoDJ,WAAWA,WAAWrD,MAAX,GAAoB,CAA/B,EAAkCyD,IAA1F,EAAgG;AAC9F;AACAC,oCAAgBxC,IAAhB,CAAqBmC,WAAWA,WAAWrD,MAAX,GAAoB,CAA/B,CAArB;AACA;AACD;AACD0D,kCAAgBC,OAAhB,CAAwB,kBAAU;AAChC;AACA;AACA;AACA,wBAAIH,OAAOC,IAAP,KAAgBF,cAAcA,cAAcvD,MAAd,GAAuB,CAArC,CAApB,EAA6D;AAC3D;AACA,0BAAI4D,aAAa,IAAIC,IAAJ,GAAWC,OAAX,KAAuBN,OAAOC,IAA/C;AACA;AACA,0BAAIR,WAAW,OAAKc,WAAL,CAAiBH,UAAjB,CAAf;AACA,0BAAII,OAAO,OAAKC,aAAL,CAAmBT,MAAnB,EAA2BP,QAA3B,EAAqCW,UAArC,CAAX;AACA;AACA,0BAAIM,MAAMjI,MAAMkI,UAAN,GAAmB,wBAA7B;AACAlI,4BAAMmI,IAAN,CAAWF,GAAX,EAAgBF,IAAhB,EAAsBvC,IAAtB,CAA2B,eAAO;AAChC;AACD,uBAFD,EAEG4C,KAFH,CAES,aAAK;AACZC,gCAAQC,GAAR,CAAYC,CAAZ;AACA,4BAAI,CAAC,OAAK1D,6BAAV,EAAyC;AACrC7E,gCAAMsE,KAAN,CAAY,OAAZ,EAAqB,OAArB,EAA8B,mEAA9B;AACH;AACD,+BAAKO,6BAAL,GAAqC,IAArC;AACD,uBARD;AASD,qBAjBD,MAiBM;AACJ;AACA,0BAAI8C,cAAaL,cAAcA,cAAcjD,OAAd,CAAsBkD,OAAOC,IAA7B,IAAqC,CAAnD,IAAwDD,OAAOC,IAAhF;AACA;AACA,0BAAIR,YAAW,OAAKc,WAAL,CAAiBH,WAAjB,CAAf;AACA,0BAAII,QAAO,OAAKC,aAAL,CAAmBT,MAAnB,EAA2BP,SAA3B,EAAqCW,WAArC,CAAX;AACF;AACA;AACE,0BAAIM,OAAMjI,MAAMkI,UAAN,GAAmB,wBAA7B;AACAlI,4BAAMmI,IAAN,CAAWF,IAAX,EAAgBF,KAAhB,EAAsBvC,IAAtB,CAA2B,eAAO;AAChC;AACD,uBAFD,EAEG4C,KAFH,CAES,aAAK;AACZC,gCAAQC,GAAR,CAAYC,CAAZ;AACA,4BAAI,CAAC,OAAK1D,6BAAV,EAAyC;AACrC7E,gCAAMsE,KAAN,CAAY,OAAZ,EAAqB,OAArB,EAA8B,mEAA9B;AACH;AACD,+BAAKO,6BAAL,GAAqC,IAArC;AACD,uBARD;AASD;AACF,mBAxCD;AAyCD,iBA7DD,MA6DM;AACJ;AACA,sBAAI,CAAC,KAAKD,0BAAV,EAAqC;AACnCyD,4BAAQC,GAAR,CAAY,2HAAZ;AACD;AACD,uBAAK1D,0BAAL,GAAkC,IAAlC;AACD;AACF,eA1ED,MA0EM;AACJ;AACA,oBAAI,CAAC,KAAKD,WAAV,EAAuB;AACrB0D,0BAAQC,GAAR,CAAY,4EAAZ;AACD;AACD,qBAAK3D,WAAL,GAAmB,IAAnB;AACD;AACF;AACF;;;qCAEUsC,I,EAAMN,I,EAAK;AACpB,gBAAI6B,UAAU,EAAd;AACA,iBAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAI9B,KAAK5C,MAAzB,EAAiC0E,GAAjC,EAAsC;AACpC,kBAAM5B,MAAMF,KAAK8B,CAAL,CAAZ;AACA,kBAAIlB,SAAS,EAAb;AACA,mBAAK,IAAImB,IAAI,CAAb,EAAgBA,IAAIzB,KAAKlD,MAAzB,EAAiC2E,GAAjC,EAAsC;AACpC,oBAAMhH,MAAMuF,KAAKyB,CAAL,CAAZ;AACAnB,uBAAO7F,GAAP,IAAcmF,IAAI6B,CAAJ,CAAd;AACD;AACDF,sBAAQvD,IAAR,CAAasC,MAAb;AACD;AACD,mBAAOiB,OAAP;AACD;;;wCAEaG,G,EAAK;AAAA;;AACjB,gBAAIC,YAAY5I,MAAMkI,UAAN,4DAAyES,GAAzE,cAAhB;AACA3I,kBAAM6I,GAAN,CAAUD,SAAV,EAAqBpD,IAArB,CAA0B,eAAO;AAC/B,kBAAG,CAACsD,IAAIC,OAAJ,CAAY,CAAZ,EAAeC,MAAnB,EAA0B;AACxB,uBAAKtG,KAAL,CAAWa,aAAX,GAA2B,KAA3B;AACAvD,sBAAMsE,KAAN,CAAY,OAAZ,EAAqB,OAArB,EAA8B,wHAA9B;AACA;AACD;AACD;AACA,kBAAG,CAACwE,IAAIC,OAAJ,CAAY,CAAZ,EAAeC,MAAf,CAAsB,CAAtB,EAAyB1H,OAAzB,CAAiC2H,QAAjC,CAA0C,MAA1C,CAAJ,EAAsD;AACpD,uBAAKvG,KAAL,CAAWa,aAAX,GAA2B,KAA3B;AACAvD,sBAAMsE,KAAN,CAAY,OAAZ,EAAqB,OAArB,EAA8B,wHAA9B;AACA;AACD;AACD,qBAAK5B,KAAL,CAAWa,aAAX,GAA2B,IAA3B;AACD,aAbD,EAaG6E,KAbH,CAaS,YAAM;AACb,qBAAK1F,KAAL,CAAWa,aAAX,GAA2B,KAA3B;AACAvD,oBAAMsE,KAAN,CAAY,OAAZ,EAAqB,OAArB,EAA8B,wHAA9B;AACA;AACD,aAjBD;AAkBD;;;sCAEWqD,U,EAAW;;AAErB;;AAEA,gBAAMuB,UAAUC,SAASxB,aAAW,IAApB,CAAhB;;AAEA,gBAAMyB,WAAWC,KAAKC,KAAL,CAAW3B,aAAW,IAAX,GAAgB,EAAhB,GAAmB,EAAnB,GAAsB,EAAjC,CAAjB;AACAA,0BAAcyB,WAAS,IAAT,GAAc,EAAd,GAAiB,EAAjB,GAAoB,EAAlC;;AAEA,gBAAIG,UAAUF,KAAKC,KAAL,CAAW3B,aAAW,IAAX,GAAgB,EAAhB,GAAmB,EAA9B,CAAd;AACAA,0BAAc4B,UAAQ,IAAR,GAAa,EAAb,GAAgB,EAA9B;;AAEA,gBAAMC,WAAW,CAAC,MAAOH,KAAKC,KAAL,CAAW3B,aAAW,IAAX,GAAgB,EAA3B,CAAR,EAAyC8B,KAAzC,CAA+C,CAAC,CAAhD,CAAjB;AACA9B,0BAAc6B,WAAS,IAAT,GAAc,EAA5B;;AAEA,gBAAME,WAAW,CAAC,MAAOL,KAAKC,KAAL,CAAW3B,aAAW,IAAtB,CAAR,EAAsC8B,KAAtC,CAA4C,CAAC,CAA7C,CAAjB;AACA9B,0BAAc6B,WAAS,IAAvB;;AAEA,gBAAIG,YAAYP,WAAW,EAA3B;AACAG,sBAAUA,UAAUI,SAApB;AACAJ,sBAAWA,UAAU,EAAX,GAAiB,MAAMA,OAAvB,GAAiCA,OAA3C;;AAEA,mBAAOA,UAAU,GAAV,GAAgBC,QAAhB,GAA2B,GAA3B,GAAiCE,QAAjC,GAA4C,GAA5C,GAAkDR,OAAzD;AACD;;;wCAEa3B,M,EAAQP,Q,EAAU4C,W,EAAY;AAC1C,gBAAI,CAAC,KAAKlH,KAAL,CAAWa,aAAhB,EAA+B;AAC7B;AACA;AACD;AACD,gBAAMsG,cAAc,KAAKnH,KAAL,CAAWV,QAA/B;AACA,gBAAI+F,OAAO8B,cAAc,QAAd,GAAyB7J,MAAM8J,QAAN,CAAevC,OAAOwC,IAAtB,EAA4B,GAA5B,CAAzB,GAA4D,QAA5D,GAAuE/J,MAAM8J,QAAN,CAAevC,OAAOyC,IAAtB,EAA4B,GAA5B,CAAvE,GAA0G,QAA1G,GAAqHhK,MAAM8J,QAAN,CAAevC,OAAOQ,IAAtB,EAA4B,GAA5B,CAArH,GAAwJ,GAAnK;;AAEAA,oBAAQ,aAAaR,OAAO0C,OAApB,GAA8B,GAAtC;AACAlC,oBAAQ,UAAUR,OAAO2C,IAAjB,GAAwB,GAAhC;AACAnC,oBAAQ,aAAaR,OAAO4C,OAApB,GAA8B,GAAtC;AACApC,oBAAQ,UAAUR,OAAO6C,IAAjB,GAAwB,GAAhC;;AAEA,gBAAG7C,OAAO8C,QAAP,KAAoB,IAApB,IAA4B9C,OAAO8C,QAAP,KAAoBhE,SAAnD,EAA8D;AAC5D0B,sBAAQ,cAAcR,OAAO8C,QAArB,GAAgC,GAAxC;AACD;;AAED,gBAAI9C,OAAO+C,MAAP,KAAkB,IAAlB,IAA0B/C,OAAO+C,MAAP,KAAkBjE,SAAhD,EAA2D;AACzD0B,sBAAQ,aAAaR,OAAO+C,MAApB,GAA6B,GAA7B,GAAmC,GAA3C;AACD;;AAED,gBAAI/C,OAAOgD,YAAP,KAAwB,IAAxB,IAAgChD,OAAOgD,YAAP,KAAwBlE,SAA5D,EAAuE;AACrE0B,sBAAQ,mBAAmBR,OAAOgD,YAA1B,GAAyC,GAAzC,GAA+C,GAAvD;AACD;;AAED,gBAAIhD,OAAOiD,WAAP,KAAuB,IAAvB,IAA+BjD,OAAOiD,WAAP,KAAuBnE,SAA1D,EAAqE;AACnE0B,sBAAQ,iBAAiBR,OAAOiD,WAAxB,GAAsC,GAA9C;AACD;;AAED,gBAAIjD,OAAOkD,GAAP,KAAe,IAAf,IAAuBlD,OAAOkD,GAAP,KAAepE,SAA1C,EAAqD;AACnD0B,sBAAQ,YAAYR,OAAOkD,GAAnB,GAAyB,GAAzB,GAA+B,GAAvC;AACD;;AAED,gBAAIlD,OAAOmD,YAAP,KAAwB,IAAxB,IAAgCnD,OAAOmD,YAAP,KAAwBrE,SAA5D,EAAuE;AACrE0B,sBAAQ,mBAAmBR,OAAOmD,YAA1B,GAAyC,GAAzC,GAA+C,GAAvD;AACD;;AAED,gBAAInD,OAAOoD,YAAP,KAAwB,IAAxB,IAAgCpD,OAAOoD,YAAP,KAAwBtE,SAA5D,EAAuE;AACrE0B,sBAAQ,mBAAmBR,OAAOoD,YAA1B,GAAyC,GAAzC,GAA+C,GAAvD;AACD;;AAED,gBAAIpD,OAAOqD,QAAP,KAAoB,IAApB,IAA4BrD,OAAOqD,QAAP,KAAoBvE,SAApD,EAA+D;AAC7D0B,sBAAQ,eAAeR,OAAOqD,QAAtB,GAAiC,GAAjC,GAAuC,GAA/C;AACD;;AAED,gBAAIrD,OAAOsD,MAAP,KAAkB,IAAlB,IAA0BtD,OAAOsD,MAAP,KAAkBxE,SAAhD,EAA2D;AACzD0B,sBAAQ,aAAaR,OAAOsD,MAApB,GAA6B,GAA7B,GAAmC,GAA3C;AACD;;AAED9C,oBAAQ,iBAAiB6B,WAAjB,GAA+B,GAAvC;AACA7B,oBAAQ,eAAef,QAAf,GAA0B,GAA1B,GAAgC,GAAxC;;AAEAe,oBAAQR,OAAOC,IAAP,GAAc,OAAtB;;AAEA;AACA,mBAAOO,IAAP;AACD;;;2CAEgBR,M,EAAO;AACtB,gBAAI,CAAC,KAAK7E,KAAL,CAAWa,aAAhB,EAA+B;AAC7B;AACA;AACD;AACD,gBAAMsG,cAAc,KAAKnH,KAAL,CAAWV,QAA/B;AACA,gBAAI+F,OAAO8B,cAAc,QAAd,GAAyB7J,MAAM8J,QAAN,CAAevC,OAAOwC,IAAtB,EAA4B,GAA5B,CAAzB,GAA4D,QAA5D,GAAuE/J,MAAM8J,QAAN,CAAevC,OAAOyC,IAAtB,EAA4B,GAA5B,CAAvE,GAA0G,QAA1G,GAAqHhK,MAAM8J,QAAN,CAAevC,OAAOQ,IAAtB,EAA4B,GAA5B,CAArH,GAAwJ,GAAnK;;AAEAA,oBAAQ,aAAaR,OAAO0C,OAApB,GAA8B,GAAtC;AACAlC,oBAAQ,UAAUR,OAAO2C,IAAjB,GAAwB,GAAhC;AACAnC,oBAAQ,aAAaR,OAAO4C,OAApB,GAA8B,GAAtC;AACApC,oBAAQ,UAAUR,OAAO6C,IAAjB,GAAwB,GAAhC;;AAEA,gBAAG7C,OAAO8C,QAAP,KAAoB,IAApB,IAA4B9C,OAAO8C,QAAP,KAAoBhE,SAAnD,EAA8D;AAC5D0B,sBAAQ,cAAcR,OAAO8C,QAArB,GAAgC,GAAxC;AACD;;AAED,gBAAI9C,OAAOmD,YAAP,KAAwB,IAAxB,IAAgCnD,OAAOmD,YAAP,KAAwBrE,SAA5D,EAAuE;AACrE0B,sBAAQ,mBAAmBR,OAAOmD,YAA1B,GAAyC,GAAzC,GAA+C,GAAvD;AACD;;AAED,gBAAInD,OAAOkD,GAAP,KAAe,IAAf,IAAuBlD,OAAOkD,GAAP,KAAepE,SAA1C,EAAqD;AACnD0B,sBAAQ,UAAUR,OAAOkD,GAAjB,GAAuB,GAAvB,GAA6B,GAArC;AACD;;AAED,gBAAIlD,OAAOiD,WAAP,KAAuB,IAAvB,IAA+BjD,OAAOiD,WAAP,KAAuBnE,SAA1D,EAAqE;AACnE0B,sBAAQ,iBAAiBR,OAAOiD,WAAxB,GAAsC,GAA9C;AACD;;AAED,gBAAIjD,OAAO+C,MAAP,KAAkB,IAAlB,IAA0B/C,OAAO+C,MAAP,KAAkBjE,SAAhD,EAA2D;AACzD0B,sBAAQ,aAAaR,OAAO+C,MAApB,GAA6B,GAA7B,GAAmC,GAA3C;AACD;;AAED,gBAAI/C,OAAOqD,QAAP,KAAoB,IAApB,IAA4BrD,OAAOqD,QAAP,KAAoBvE,SAApD,EAA+D;AAC7D0B,sBAAQ,eAAeR,OAAOqD,QAAtB,GAAiC,GAAjC,GAAuC,GAA/C;AACD;;AAED,gBAAIrD,OAAOsD,MAAP,KAAkB,IAAlB,IAA0BtD,OAAOsD,MAAP,KAAkBxE,SAAhD,EAA2D;AACzD0B,sBAAQ,aAAaR,OAAOsD,MAApB,GAA6B,GAA7B,GAAmC,GAA3C;AACA9C,sBAAQ,mBAAmBR,OAAOsD,MAAP,CAAcC,KAAd,CAAoB,KAApB,EAA2B,CAA3B,CAAnB,GAAmD,GAAnD,GAAyD,GAAjE;AACD;;AAED,gBAAIvD,OAAOqC,WAAP,KAAuB,IAAvB,IAA+BrC,OAAOqC,WAAP,KAAuBvD,SAA1D,EAAqE;AACnE0B,sBAAQ,iBAAiBR,OAAOqC,WAAxB,GAAsC,GAA9C;AACD;;AAED,gBAAIrC,OAAOP,QAAP,KAAoB,IAApB,IAA4BO,OAAOP,QAAP,KAAoBX,SAApD,EAA+D;AAC7D0B,sBAAQ,eAAeR,OAAOP,QAAtB,GAAiC,GAAjC,GAAuC,GAA/C;AACD;;AAEDe,oBAAQR,OAAOC,IAAP,GAAc,OAAtB;;AAEA;;AAEA,mBAAOO,IAAP;AACD;;;mCAEQ;AACP,iBAAKgD,KAAL,GAAahL,qBAAqB,KAAK6F,OAA1B,EAAmC,KAAKlD,KAAxC,CAAb;AACA;AACA,iBAAKqI,KAAL,CAAWtJ,IAAX,CAAgB,KAAKiB,KAAL,CAAWjB,IAA3B;AACA;AACA,iBAAKuJ,QAAL,GAAgB,IAAI7K,aAAJ,CACd,KAAKuC,KADS,EAEd,KAAKqI,KAFS,EAGd,KAAKzF,SAAL,CAAe2F,aAAf,EAHc,EAId,KAAK3I,SAJS,EAKd,KAAKF,WALS,EAMd,KAAKV,GANS,CAAhB;;AASA,gIAAoB,KAAKqJ,KAAzB;AACD;;;2CAEgBrJ,G,EAAKwJ,Q,EAAU;AAC9B;AACA,gBAAI,KAAKH,KAAL,CAAWzJ,OAAX,CAAmB,KAAKoB,KAAL,CAAWjB,IAAX,CAAgBC,GAAnC,CAAJ,EAA6C;AAC3C,mBAAKqJ,KAAL,CAAWzJ,OAAX,CAAmB,KAAKoB,KAAL,CAAWjB,IAAX,CAAgBC,GAAnC,EAAwCD,IAAxC,GAA+C,KAA/C;AACD;;AAED,gBAAI,KAAKiB,KAAL,CAAWjB,IAAX,CAAgBC,GAAhB,KAAwBwJ,QAA5B,EAAsC;AACpC,kBAAI,KAAKxI,KAAL,CAAWjB,IAAX,CAAgBE,IAApB,EAA0B;AACxB,qBAAKe,KAAL,CAAWjB,IAAX,CAAgBE,IAAhB,GAAuB,KAAvB;AACD,eAFD,MAEO;AACL,qBAAKe,KAAL,CAAWjB,IAAX,CAAgBC,GAAhB,GAAsB,IAAtB;AACD;AACF,aAND,MAMO;AACL,mBAAKgB,KAAL,CAAWjB,IAAX,CAAgBC,GAAhB,GAAsBwJ,QAAtB;AACA,mBAAKxI,KAAL,CAAWjB,IAAX,CAAgBE,IAAhB,GAAuB,IAAvB;AACD;AACD,iBAAKkE,MAAL;AACD;;;sCAEW;AACV,gBAAMsF,QAAQ,KAAKjJ,MAAL,CAAYkJ,IAAZ,CAAiB,IAAjB,CAAd;AACAD,kBAAME,SAAN,GAAkB,KAAKL,QAAL,CAAcM,aAAd,EAAlB;AACAH,kBAAMzI,KAAN,GAAc,OAAd;AACA,iBAAK6I,eAAL,CAAqB,YAArB,EAAmC;AACjCC,4BAAc,wEADmB;AAEjCL,0BAFiC;AAGjCM,0BAAY;AAHqB,aAAnC;AAKD;;;+BAEIN,K,EAAOO,I,EAAMC,K,EAAOxH,I,EAAM;AAC7B,gBAAIsB,aAAJ;AACA,gBAAM/C,QAAQyB,KAAKzB,KAAnB;AACA,gBAAIkJ,YAAY,CAAhB;;AAEA,qBAASC,cAAT,GAA0B;AACxB,kBAAIC,cAAc3H,KAAK4H,MAAvB;;AAEA,kBAAIH,YAAY,CAAhB,EAAmB;AACjBE,+BAAe,EAAf;AACD;;AAED,qBAAOA,cAAc,EAAd,GAAmB,IAA1B;AACD;;AAED,qBAASE,eAAT,CAAyBC,SAAzB,EAAoC;AAClC9H,mBAAK6G,QAAL,CAAckB,QAAd,CAAuBzG,IAAvB;AACAwG,wBAAUE,KAAV;AACAF,wBAAUG,IAAV,CAAejI,KAAK6G,QAAL,CAAcnF,MAAd,CAAqB1B,KAAK1B,SAA1B,CAAf;AACD;;AAED,qBAAS4J,UAAT,CAAoB9D,CAApB,EAAuB;AACrB,kBAAM+D,KAAK3M,EAAE4I,EAAEgE,aAAJ,CAAX;AACApI,mBAAK1B,SAAL,GAAiB0G,SAASmD,GAAGrI,IAAH,EAAT,EAAoB,EAApB,IAA0B,CAA3C;AACAuI;AACD;;AAED,qBAASC,wBAAT,CAAkCC,UAAlC,EAA8C;AAC5CA,yBAAWP,KAAX;;AAEA,kBAAM1L,WAAWiC,MAAMjC,QAAN,IAAkB,GAAnC;AACAmL,0BAAYvC,KAAKsD,IAAL,CAAUlH,KAAKkB,IAAL,CAAU5C,MAAV,GAAmBtD,QAA7B,CAAZ;AACA,kBAAImL,cAAc,CAAlB,EAAqB;AACnB;AACD;;AAED,kBAAMgB,YAAYvD,KAAKwD,GAAL,CAAS1I,KAAK1B,SAAL,GAAiB,CAA1B,EAA6B,CAA7B,CAAlB;AACA,kBAAMqK,UAAUzD,KAAK0D,GAAL,CAASnB,SAAT,EAAoBgB,YAAY,CAAhC,CAAhB;;AAEA,kBAAMI,iBAAiBrN,EAAE,WAAF,CAAvB;;AAEA,mBAAK,IAAI8I,IAAImE,SAAb,EAAwBnE,IAAIqE,OAA5B,EAAqCrE,GAArC,EAA0C;AACxC,oBAAMwE,cAAcxE,MAAMtE,KAAK1B,SAAX,GAAuB,QAAvB,GAAkC,EAAtD;AACA,oBAAMyK,eAAevN,EACnB,iDAAiDsN,WAAjD,GAA+D,IAA/D,IAAuExE,IAAI,CAA3E,IAAgF,WAD7D,CAArB;AAGAuE,+BAAeG,MAAf,CAAsBD,YAAtB;AACD;;AAEDR,yBAAWS,MAAX,CAAkBH,cAAlB;AACD;;AAED,qBAASR,WAAT,GAAuB;AACrB,kBAAMY,YAAY1B,KAAK2B,OAAL,CAAa,gBAAb,CAAlB;AACA,kBAAMC,WAAW5B,KAAK6B,IAAL,CAAU,qBAAV,CAAjB;AACA,kBAAMtB,YAAYP,KAAK6B,IAAL,CAAU,OAAV,CAAlB;AACA,kBAAMb,aAAahB,KAAK6B,IAAL,CAAU,qBAAV,CAAnB;;AAEA7B,mBAAK8B,GAAL,CAAS,EAAE,aAAa9K,MAAMlB,QAArB,EAAT;AACA4L,wBAAUK,QAAV,CAAmB,qBAAnB;;AAEAzB,8BAAgBC,SAAhB;AACAQ,uCAAyBC,UAAzB;;AAEAY,uBAASE,GAAT,CAAa,EAAE,cAAc9K,MAAMnB,MAAN,GAAesK,gBAAf,GAAkC,EAAlD,EAAb;;AAEA;AACA,kBAAI1H,KAAK4G,KAAL,CAAWzJ,OAAf,EAAwB;AACtB6C,qBAAKC,aAAL,GAAqBD,KAAK4G,KAAL,CAAWzJ,OAAX,CAAmBsF,MAAnB,CAA0B;AAAA,yBAAK,CAACJ,EAAEkH,MAAR;AAAA,iBAA1B,EAA0C/J,GAA1C,CAA8C;AAAA,yBAAK6C,EAAEvC,IAAF,CAAOwC,WAAP,EAAL;AAAA,iBAA9C,CAArB;AACD;AACF;;AAED;AACAiF,iBAAKiC,OAAL,CAAa;AACXC,wBAAU;AADC,aAAb;;AAIA,qBAASC,gBAAT,CAA0BtF,CAA1B,EAA6B;AAC3B,kBAAMuF,aAAanO,EAAE4I,EAAEgE,aAAJ,EAAmB9G,IAAnB,EAAnB;AACA,kBAAMsI,UAAU;AACd5I,4BAAYzC,MAAMyC,UADJ;AAEdwD,qBAAKlD,KAAKnE,OAAL,CAAawM,WAAWE,MAAxB,EAAgC/J,IAFvB;AAGdgK,uBAAOxI,KAAKkB,IAAL,CAAUmH,WAAWjH,GAArB,EAA0BiH,WAAWE,MAArC,CAHO;AAIdE,0BAAUJ,WAAWI;AAJP,eAAhB;;AAOA/J,mBAAK5B,WAAL,CAAiB4L,cAAjB,CAAgCJ,OAAhC;AACD;;AAEDrC,iBAAK5I,EAAL,CAAQ,OAAR,EAAiB,wBAAjB,EAA2CuJ,UAA3C;AACAX,iBAAK5I,EAAL,CAAQ,OAAR,EAAiB,0BAAjB,EAA6C+K,gBAA7C;;AAEA,gBAAMO,gBAAgBjD,MAAMkD,GAAN,CAAU,UAAV,EAAsB,YAAM;AAChD3C,mBAAKjI,GAAL,CAAS,OAAT,EAAkB,wBAAlB;AACAiI,mBAAKjI,GAAL,CAAS,OAAT,EAAkB,0BAAlB;AACA2K;AACD,aAJqB,CAAtB;;AAMAjK,iBAAKtB,MAAL,CAAYC,EAAZ,CAAe,QAAf,EAAyB,sBAAc;AACrC2C,qBAAO6I,cAAc7I,IAArB;AACA,kBAAIA,IAAJ,EAAU;AACR+G;AACD;AACDrI,mBAAKoK,kBAAL;AACD,aAND;AAOD;;;;QA1jB4BzO,gB;;;;8BA8jBlB0O,Y,GAAe,SAAfA,YAAe,GAAM;AAChCnO,cAAMoO,OAAN;AACD,O;;;;qCAEYC,mB,GAAsB,SAAtBA,mBAAsB,GAAM;AACvC,eAAOrO,MAAMqC,KAAN,CAAYV,QAAnB;AACD,O;;;;uCAEY2M,qB,GAAwB,SAAxBA,qBAAwB,GAAM;AACzC,eAAOtO,MAAMqC,KAAN,CAAYZ,kBAAnB;AACD,O;;;;sCAEY8M,oB,GAAuB,SAAvBA,oBAAuB,GAAM;AACxC,eAAOvO,MAAMqC,KAAN,CAAYX,iBAAnB;AACD,O;;;;sCAEY8M,oB,GAAuB,SAAvBA,oBAAuB,GAAM;AACxC,eAAOxO,MAAMqC,KAAN,CAAYa,aAAnB;AACD,O;;;;AAEDtB,gBAAU6M,WAAV,GAAwB,wBAAxB","file":"table_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport * as FileExport from 'app/core/utils/file_export';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {transformDataToTable} from './transformers';\nimport * as utils from './utils'\nimport {tablePanelEditor} from './editor';\nimport {columnOptionsTab} from './column_options';\nimport {TableRenderer} from './renderer';\nimport {FormOptionCtrl} from './form_option_ctrl'\n\nimport './css/style.css!';\nimport './css/bootstrap-slider.css!';\nimport './css/instant-search.css!';\n\nlet _ctrl\n\nconst panelDefaults = {\n  targets: [{}],\n  transform: 'timeseries_to_columns',\n  pageSize: null,\n  showHeader: true,\n  styles: [\n    {\n      type: 'date',\n      pattern: 'Time',\n      alias: 'Time',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss.SSS',\n      headerColor: \"rgba(51, 181, 229, 1)\"\n    },\n    {\n      unit: 'short',\n      type: 'number',\n      alias: '',\n      decimals: 2,\n      headerColor: \"rgba(51, 181, 229, 1)\",\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      colorMode: null,\n      pattern: '/.*/',\n      thresholds: [],\n    }\n  ],\n  columns: [],\n  scroll: true,\n  fontSize: '100%',\n  sort: { col: 0, desc: true },\n  durationFilter: 3,\n  hideExecute: true,\n  reasonCodeEndPoint: 'reason_code',\n  equipmentEndPoint: 'equipment',\n  endPoint: 'Availability'\n};\n\nexport class TableCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, templateSrv, annotationsSrv, $sanitize, variableSrv, $sce) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n\n    this.panel.camundaUrl = $sce.trustAsResourceUrl(utils.camundaHost)\n    this.panel.measurementOK = false\n\n    $(document).off('click', 'tr.tr-affect#event-editor-table-tr-id')\n    //Show form if a row is clicked\n    $(document).on('click', 'tr.tr-affect#event-editor-table-tr-id', function () {\n      const rawData = $('td', this).map((index, td)=>{\n        \n        if (td.childNodes.length === 2) {\n          return td.childNodes[1].nodeValue\n        }else if (td.childNodes.length === 1) {\n          return $(td).text()\n        }else {\n          return ''\n        }\n\n      })\n\n      const timeIndex = $scope.ctrl.colDimensions.indexOf(\"time\")\n      if (!~timeIndex) {\n        utils.alert('error', 'Error', 'Get not get this event from the database because TIME NOT FOUND, please contact the dev team, or try to NOT hide the time column')\n        return\n      }else {\n        const date = rawData[timeIndex]\n        const timestamp = moment(date).valueOf() * 1000000\n        new FormOptionCtrl($scope.ctrl, timestamp).show()\n      }\n    })\n\n    this.errorLogged = false\n    this.durationMissingErrorLogged = false\n    this.postgresConnectionErrorLogged = false\n    this.parentUpdated = false\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({ text: 'Export CSV', click: 'ctrl.exportCsv()' });\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then(annotations => {\n          return { data: annotations };\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList.length !== 0) {\n      this.handle(dataList[0])\n    }\n\n    if(this.panel.hideExecute){\n      if (dataList.length !== 0) {\n          dataList = this.filterExecute(dataList)\n      }\n    }\n\n    // filter shorter duration\n    if (dataList.length !== 0) {\n      if (this.panel.durationFilter) {\n        if (isNaN(this.panel.durationFilter)) {\n          this.panel.durationFilter = 3\n        }\n        dataList = this.filterDuration(this.panel.durationFilter, dataList) \n      }\n    }\n    \n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.checkEndPoint(this.panel.endPoint)\n    this.render();\n  }\n\n  filterExecute(data){\n    let filteredData;\n    if (data[0].columns !== null && data[0].columns !== undefined) {\n      let indexOfexecute = data[0].columns.findIndex(x => x.text.toLowerCase() === 'execute')\n      let filteredRows = data[0].rows.filter(row => row[indexOfexecute] !== 1)\n      data[0].rows = filteredRows\n    }\n    filteredData = data\n    return filteredData;\n  }\n\n  filterDuration(minDur, data){\n    const minDurVal = moment.duration(minDur, 'minutes').valueOf()\n    let filteredData;\n    if (data[0].columns !== null && data[0].columns !== undefined) {\n      let index = data[0].columns.findIndex(x => x.text.toLowerCase() === 'durationint')\n      if (!~index) { return data }\n      let filteredRows = data[0].rows.filter(row => row[index] >= minDurVal)\n      data[0].rows = filteredRows\n    }\n    filteredData = data\n    return filteredData\n  }\n\n  handle(data){\n    if (data !== undefined) {\n      if (data.type === 'table') {\n        let cols = data.columns.reduce((arr, col) => {\n          let text = col.text.toLowerCase()\n          arr.push(text)\n          return arr\n        }, [])\n        if (cols.indexOf('duration') !== -1) {\n          //contains duration, continue\n          let allRecords = this.getRecords(cols, data.rows)\n          // console.log(allRecords)\n          let allTimestamps = allRecords.reduce((arr, record) => {\n            let timestamp = record.time\n            arr.push(timestamp)\n            return arr\n          }, [])\n          //only works for ones that are with duration === null\n          let recordsToUpdate = allRecords.filter(record => record.duration === null || record.duration === undefined)\n          if (recordsToUpdate.length === 0) {\n            //The newest records must be updated no matter what, push it to the list\n            recordsToUpdate.push(allRecords[allRecords.length - 1])\n          }\n          if (recordsToUpdate[recordsToUpdate.length -1].time !== allRecords[allRecords.length - 1].time) {\n            //The newest records must be updated no matter what, push it to the list\n            recordsToUpdate.push(allRecords[allRecords.length - 1])\n            // console.log('update newest one')\n          }\n          recordsToUpdate.forEach(record => {\n            // console.log(allTimestamps)\n            // console.log(record.time)\n            // console.log(allTimestamps.indexOf(record.time))\n            if (record.time === allTimestamps[allTimestamps.length - 1]) {\n              //The most updated record, calculate the duration by now()\n              let difference = new Date().getTime() - record.time\n              // console.log('record time', record.time)\n              let duration = this.getDuration(difference)\n              let line = this.getInfluxLine(record, duration, difference)\n              // console.log(record);\n              let url = utils.influxHost + 'write?db=smart_factory'\n              utils.post(url, line).then(res => {\n                // console.log(res)\n              }).catch(e => {\n                console.log(e)\n                if (!this.postgresConnectionErrorLogged) {\n                    utils.alert('error', 'Error', 'Unexpected error occurred while connection to the influx database')\n                }\n                this.postgresConnectionErrorLogged = true\n              })\n            }else {\n              //other records\n              let difference = allTimestamps[allTimestamps.indexOf(record.time) + 1] - record.time\n              // console.log('record time 2', record.time)\n              let duration = this.getDuration(difference)\n              let line = this.getInfluxLine(record, duration, difference)\n            //   console.log('other updated');\n            //   console.log(line);\n              let url = utils.influxHost + 'write?db=smart_factory'\n              utils.post(url, line).then(res => {\n                // console.log(res)\n              }).catch(e => {\n                console.log(e)\n                if (!this.postgresConnectionErrorLogged) {\n                    utils.alert('error', 'Error', 'Unexpected error occurred while connection to the influx database')\n                }\n                this.postgresConnectionErrorLogged = true\n              })\n            }\n          })\n        }else {\n          //There is no column name duration\n          if (!this.durationMissingErrorLogged){\n            console.log('To calculate the duration of each event, the column name must be named as duration, both upper and lower cases would work')\n          }\n          this.durationMissingErrorLogged = true\n        }\n      }else {\n        //The table format is not TABLE\n        if (!this.errorLogged) {\n          console.log('To calculate the duration of each event, please format the data as a TABLE')\n        }\n        this.errorLogged = true\n      }\n    }\n  }\n\n  getRecords(cols, rows){\n    let records = []\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      let record = {}\n      for (let k = 0; k < cols.length; k++) {\n        const col = cols[k];\n        record[col] = row[k]\n      }\n      records.push(record)\n    }\n    return records\n  }\n\n  checkEndPoint(key) {\n    let influxUrl = utils.influxHost + `query?pretty=true&db=smart_factory&q=select * from ${key} limit 1`\n    utils.get(influxUrl).then(res => {\n      if(!res.results[0].series){\n        this.panel.measurementOK = false\n        utils.alert('error', 'Error', \"The measurement you put in the Down Time Panel may be invalid, please make sure it matches the one that's in the query\")\n        return\n      } \n      // console.log(res)\n      if(!res.results[0].series[0].columns.includes('held')){\n        this.panel.measurementOK = false\n        utils.alert('error', 'Error', \"The measurement you put in the Down Time Panel may be invalid, please make sure it matches the one that's in the query\")\n        return\n      }\n      this.panel.measurementOK = true\n    }).catch(() => {\n      this.panel.measurementOK = false\n      utils.alert('error', 'Error', \"The measurement you put in the Down Time Panel may be invalid, please make sure it matches the one that's in the query\")\n      return\n    })\n  }\n\n  getDuration(difference){\n\n    // console.log('diff', difference)\n\n    const milSecs = parseInt(difference%1000)\n\n    const daysDiff = Math.floor(difference/1000/60/60/24)\n    difference -= daysDiff*1000*60*60*24\n\n    let hrsDiff = Math.floor(difference/1000/60/60)\n    difference -= hrsDiff*1000*60*60\n\n    const minsDiff = ('0' + (Math.floor(difference/1000/60))).slice(-2)\n    difference -= minsDiff*1000*60\n\n    const secsDiff = ('0' + (Math.floor(difference/1000))).slice(-2)\n    difference -= minsDiff*1000\n\n    let timeToAdd = daysDiff * 24\n    hrsDiff = hrsDiff + timeToAdd\n    hrsDiff = (hrsDiff < 10) ? '0' + hrsDiff : hrsDiff\n\n    return hrsDiff + ':' + minsDiff + ':' + secsDiff + '.' + milSecs\n  }\n\n  getInfluxLine(record, duration, durationInt){\n    if (!this.panel.measurementOK) {\n      // console.log('not writing 1')\n      return\n    }\n    const measurement = this.panel.endPoint\n    let line = measurement + ',Site=' + utils.addSlash(record.site, ' ') + ',Area=' + utils.addSlash(record.area, ' ') + ',Line=' + utils.addSlash(record.line, ' ') + ' '\n\n    line += 'stopped=' + record.stopped + ','\n    line += 'idle=' + record.idle + ','\n    line += 'execute=' + record.execute + ','\n    line += 'held=' + record.held + ','\n    \n    if(record.complete !== null && record.complete !== undefined) {\n      line += 'complete=' + record.complete + ','\n    }\n\n    if (record.status !== null && record.status !== undefined) {\n      line += 'status=\"' + record.status + '\"' + ','\n    }\n\n    if (record.machinestate !== null && record.machinestate !== undefined) {\n      line += 'MachineState=\"' + record.machinestate + '\"' + ','\n    }\n\n    if (record.actual_rate !== null && record.actual_rate !== undefined) {\n      line += 'actual_rate=' + record.actual_rate + ','\n    }\n\n    if (record.rid !== null && record.rid !== undefined) {\n      line += 'rid_1=\"' + record.rid + '\"' + ','\n    }\n\n    if (record.MachineState !== null && record.MachineState !== undefined) {\n      line += 'MachineState=\"' + record.MachineState + '\"' + ','\n    }\n    \n    if (record.parentReason !== null && record.parentReason !== undefined) {\n      line += 'parentReason=\"' + record.parentReason + '\"' + ','\n    }\n\n    if (record.category !== null && record.category !== undefined) {\n      line += 'category=\"' + record.category + '\"' + ','\n    }\n    \n    if (record.reason !== null && record.reason !== undefined) {\n      line += 'reason=\"' + record.reason + '\"' + ','\n    }\n\n    line += 'durationInt=' + durationInt + ','\n    line += 'duration=\"' + duration + '\"' + ' '\n    \n    line += record.time * 1000000\n    \n    // console.log('line1' , line)\n    return line\n  }\n\n  normalInfluxLine(record){\n    if (!this.panel.measurementOK) {\n      // console.log('not writing')\n      return\n    }\n    const measurement = this.panel.endPoint\n    let line = measurement + ',Site=' + utils.addSlash(record.site, ' ') + ',Area=' + utils.addSlash(record.area, ' ') + ',Line=' + utils.addSlash(record.line, ' ') + ' '\n\n    line += 'stopped=' + record.stopped + ','\n    line += 'idle=' + record.idle + ','\n    line += 'execute=' + record.execute + ','\n    line += 'held=' + record.held + ','\n\n    if(record.complete !== null && record.complete !== undefined) {\n      line += 'complete=' + record.complete + ','\n    }\n\n    if (record.MachineState !== null && record.MachineState !== undefined) {\n      line += 'MachineState=\"' + record.MachineState + '\"' + ','\n    }\n\n    if (record.rid !== null && record.rid !== undefined) {\n      line += 'rid=\"' + record.rid + '\"' + ','\n    }\n\n    if (record.actual_rate !== null && record.actual_rate !== undefined) {\n      line += 'actual_rate=' + record.actual_rate + ','\n    }\n\n    if (record.status !== null && record.status !== undefined) {\n      line += 'status=\"' + record.status + '\"' + ','\n    }\n\n    if (record.category !== null && record.category !== undefined) {\n      line += 'category=\"' + record.category + '\"' + ','\n    }\n    \n    if (record.reason !== null && record.reason !== undefined) {\n      line += 'reason=\"' + record.reason + '\"' + ','\n      line += 'parentReason=\"' + record.reason.split(' | ')[0] + '\"' + ','\n    }\n\n    if (record.durationInt !== null && record.durationInt !== undefined) {\n      line += 'durationInt=' + record.durationInt + ','\n    }\n\n    if (record.duration !== null && record.duration !== undefined) {\n      line += 'duration=\"' + record.duration + '\"' + ','\n    }\n    \n    line += record.time * 1000000\n  \n    // console.log('line2' , line)\n\n    return line\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    // console.log(this.panel.sort);\n    this.table.sort(this.panel.sort);\n    // console.log(this.panel.sort);\n    this.renderer = new TableRenderer(\n      this.panel,\n      this.table,\n      this.dashboard.isTimezoneUtc(),\n      this.$sanitize,\n      this.templateSrv,\n      this.col\n    );\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  exportCsv() {\n    const scope = this.$scope.$new(true);\n    scope.tableData = this.renderer.render_values();\n    scope.panel = 'table';\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal panel=\"panel\" data=\"tableData\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let data;\n    const panel = ctrl.panel;\n    let pageCount = 0;\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return panelHeight - 31 + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n\n    function switchPage(e) {\n      const el = $(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      const pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      const startPage = Math.max(ctrl.pageIndex - 3, 0);\n      const endPage = Math.min(pageCount, startPage + 9);\n\n      const paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        const activeClass = i === ctrl.pageIndex ? 'active' : '';\n        const pageLinkElem = $(\n          '<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>'\n        );\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      const panelElem = elem.parents('.panel-content');\n      const rootElem = elem.find('.table-panel-scroll');\n      const tbodyElem = elem.find('tbody');\n      const footerElem = elem.find('.table-panel-footer');\n\n      elem.css({ 'font-size': panel.fontSize });\n      panelElem.addClass('table-panel-content');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({ 'max-height': panel.scroll ? getTableHeight() : '' });\n\n      // get current table column dimensions \n      if (ctrl.table.columns) {\n        ctrl.colDimensions = ctrl.table.columns.filter(x => !x.hidden).map(x => x.text.toLowerCase())\n      }\n    }\n\n    // hook up link tooltips\n    elem.tooltip({\n      selector: '[data-link-tooltip]',\n    });\n\n    function addFilterClicked(e) {\n      const filterData = $(e.currentTarget).data();\n      const options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator,\n      };\n\n      ctrl.variableSrv.setAdhocFilter(options);\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n    elem.on('click', '.table-panel-filter-link', addFilterClicked);\n\n    const unbindDestroy = scope.$on('$destroy', () => {\n      elem.off('click', '.table-panel-page-link');\n      elem.off('click', '.table-panel-filter-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', renderData => {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n}\n\nexport const refreshPanel = () => {\n  _ctrl.refresh()\n}\n\nexport const getQueryMeasurement = () => {\n  return _ctrl.panel.endPoint\n}\n\nexport const getReasonCodeEndPoint = () => {\n  return _ctrl.panel.reasonCodeEndPoint\n}\n\nexport const getEquipmentEndPoint = () => {\n  return _ctrl.panel.equipmentEndPoint\n}\n\nexport const isReadyToWriteInData = () => {\n  return _ctrl.panel.measurementOK\n}\n\nTableCtrl.templateUrl = './partials/module.html';\n"]}