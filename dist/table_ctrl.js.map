{"version":3,"sources":["../src/table_ctrl.js"],"names":["_","$","moment","FileExport","MetricsPanelCtrl","transformDataToTable","showForm","utils","tablePanelEditor","columnOptionsTab","TableRenderer","timestamp","panelDefaults","targets","transform","pageSize","showHeader","styles","type","pattern","alias","dateFormat","headerColor","unit","decimals","colors","colorMode","thresholds","columns","scroll","fontSize","sort","col","desc","TableCtrl","$scope","$injector","templateSrv","annotationsSrv","$sanitize","variableSrv","$sce","pageIndex","panel","fields","defaults","events","on","onDataReceived","bind","onDataError","onInitEditMode","onInitPanelActions","camundaUrl","trustAsResourceUrl","camundaHost","document","off","rawData","map","index","td","childNodes","length","nodeValue","text","date","valueOf","errorLogged","durationMissingErrorLogged","postgresConnectionErrorLogged","parentUpdated","addEditorTab","actions","push","click","datasource","setTimeQueryStart","getAnnotations","dashboard","range","then","data","annotations","err","dataRaw","render","dataList","handle","hideExecute","filterExecute","filteredData","undefined","indexOfexecute","findIndex","x","toLowerCase","filteredRows","rows","filter","row","cols","reduce","arr","indexOf","allRecords","getRecords","allTimestamps","record","time","recordsToUpdate","duration","forEach","difference","Date","getTime","getDuration","line","getInfluxLine","url","influxHost","post","catch","console","log","e","alert","records","i","k","milSecs","parseInt","daysDiff","Math","floor","hrsDiff","minsDiff","slice","secsDiff","timeToAdd","durationInt","site","area","stopped","idle","execute","held","complete","status","parentReason","category","reason","split","table","renderer","isTimezoneUtc","colIndex","scope","$new","tableData","render_values","publishAppEvent","templateHtml","modalClass","elem","attrs","ctrl","pageCount","getTableHeight","panelHeight","height","appendTableRows","tbodyElem","setTable","empty","html","switchPage","el","currentTarget","renderPanel","appendPaginationControls","footerElem","ceil","startPage","max","endPage","min","paginationList","activeClass","pageLinkElem","append","panelElem","parents","rootElem","find","css","addClass","tooltip","selector","addFilterClicked","filterData","options","key","column","value","operator","setAdhocFilter","unbindDestroy","$on","renderData","renderingCompleted","templateUrl"],"mappings":"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","file":"table_ctrl.js","sourcesContent":["import _ from 'lodash';\nimport $ from 'jquery';\nimport moment from 'moment';\nimport * as FileExport from 'app/core/utils/file_export';\nimport {MetricsPanelCtrl} from 'app/plugins/sdk';\nimport {transformDataToTable} from './transformers';\nimport {showForm} from './form_ctrl'\nimport * as utils from './utils'\nimport {tablePanelEditor} from './editor';\nimport {columnOptionsTab} from './column_options';\nimport {TableRenderer} from './renderer';\n\nimport './css/style.css!';\nimport './css/bootstrap-slider.css!';\nimport './css/instant-search.css!';\n\nlet timestamp\n\nconst panelDefaults = {\n  targets: [{}],\n  transform: 'timeseries_to_columns',\n  pageSize: null,\n  showHeader: true,\n  styles: [\n    {\n      type: 'date',\n      pattern: 'Time',\n      alias: 'Time',\n      dateFormat: 'YYYY-MM-DD HH:mm:ss',\n      headerColor: \"rgba(51, 181, 229, 1)\"\n    },\n    {\n      unit: 'short',\n      type: 'number',\n      alias: '',\n      decimals: 2,\n      headerColor: \"rgba(51, 181, 229, 1)\",\n      colors: [\"rgba(245, 54, 54, 0.9)\", \"rgba(237, 129, 40, 0.89)\", \"rgba(50, 172, 45, 0.97)\"],\n      colorMode: null,\n      pattern: '/.*/',\n      thresholds: [],\n    }\n  ],\n  columns: [],\n  scroll: true,\n  fontSize: '100%',\n  sort: { col: 0, desc: true },\n};\n\nexport class TableCtrl extends MetricsPanelCtrl {\n\n  constructor($scope, $injector, templateSrv, annotationsSrv, $sanitize, variableSrv, $sce) {\n    super($scope, $injector);\n\n    this.pageIndex = 0;\n\n    if (this.panel.styles === void 0) {\n      this.panel.styles = this.panel.columns;\n      this.panel.columns = this.panel.fields;\n      delete this.panel.columns;\n      delete this.panel.fields;\n    }\n\n    _.defaults(this.panel, panelDefaults);\n\n    this.events.on('data-received', this.onDataReceived.bind(this));\n    this.events.on('data-error', this.onDataError.bind(this));\n    this.events.on('data-snapshot-load', this.onDataReceived.bind(this));\n    this.events.on('init-edit-mode', this.onInitEditMode.bind(this));\n    this.events.on('init-panel-actions', this.onInitPanelActions.bind(this));\n\n    this.panel.camundaUrl = $sce.trustAsResourceUrl(utils.camundaHost)\n\n    $(document).off('click', 'tr.tr-affect#event-editor-table-tr-id')\n    //Show form if a row is clicked\n    $(document).on('click', 'tr.tr-affect#event-editor-table-tr-id', function () {\n      const rawData = $('td', this).map((index, td)=>{\n        \n        if (td.childNodes.length === 2) {\n          return td.childNodes[1].nodeValue\n        }else if (td.childNodes.length === 1) {\n          return $(td).text()\n        }else {\n          return ''\n        }\n\n      })\n\n      let date = rawData[0]\n      timestamp = moment(date).valueOf() * 1000000\n      showForm(timestamp)\n    })\n\n    this.errorLogged = false\n    this.durationMissingErrorLogged = false\n    this.postgresConnectionErrorLogged = false\n    this.parentUpdated = false\n  }\n\n  onInitEditMode() {\n    this.addEditorTab('Options', tablePanelEditor, 2);\n    this.addEditorTab('Column Styles', columnOptionsTab, 3);\n  }\n\n  onInitPanelActions(actions) {\n    actions.push({ text: 'Export CSV', click: 'ctrl.exportCsv()' });\n  }\n\n  issueQueries(datasource) {\n    this.pageIndex = 0;\n\n    if (this.panel.transform === 'annotations') {\n      this.setTimeQueryStart();\n      return this.annotationsSrv\n        .getAnnotations({\n          dashboard: this.dashboard,\n          panel: this.panel,\n          range: this.range,\n        })\n        .then(annotations => {\n          return { data: annotations };\n        });\n    }\n\n    return super.issueQueries(datasource);\n  }\n\n  onDataError(err) {\n    this.dataRaw = [];\n    this.render();\n  }\n\n  onDataReceived(dataList) {\n    if (dataList.length !== 0) {\n      \n      this.handle(dataList[0])\n    }\n\n    if(this.panel.hideExecute){\n      if (dataList.length !== 0) {\n          dataList = this.filterExecute(dataList)\n      }\n    }\n\n    this.dataRaw = dataList;\n    this.pageIndex = 0;\n    // automatically correct transform mode based on data\n    if (this.dataRaw && this.dataRaw.length) {\n      if (this.dataRaw[0].type === 'table') {\n        this.panel.transform = 'table';\n      } else {\n        if (this.dataRaw[0].type === 'docs') {\n          this.panel.transform = 'json';\n        } else {\n          if (this.panel.transform === 'table' || this.panel.transform === 'json') {\n            this.panel.transform = 'timeseries_to_rows';\n          }\n        }\n      }\n    }\n\n    this.render();\n  }\n\n  filterExecute(data){\n    let filteredData;\n    if (data[0].columns !== null && data[0].columns !== undefined) {\n      let indexOfexecute = data[0].columns.findIndex(x => x.text.toLowerCase() === 'execute')\n      let filteredRows = data[0].rows.filter(row => row[indexOfexecute] !== 1)\n      data[0].rows = filteredRows\n      filteredData = data\n    }\n    return filteredData;\n  }\n\n  handle(data){\n    if (data !== undefined) {\n      if (data.type === 'table') {\n        let cols = data.columns.reduce((arr, col) => {\n          let text = col.text.toLowerCase()\n          arr.push(text)\n          return arr\n        }, [])\n        if (cols.indexOf('duration') !== -1) {\n          //contains duration, continue\n          let allRecords = this.getRecords(cols, data.rows)\n          let allTimestamps = allRecords.reduce((arr, record) => {\n            let timestamp = record.time\n            arr.push(timestamp)\n            return arr\n          }, [])\n          //only works for ones that are with duration === null\n          let recordsToUpdate = allRecords.filter(record => record.duration === null || record.duration === undefined)\n          if (recordsToUpdate.length === 0) {\n            //The newest records must be updated no matter what, push it to the list\n            recordsToUpdate.push(allRecords[allRecords.length - 1])\n          }\n          if (recordsToUpdate[recordsToUpdate.length -1].time !== allRecords[allRecords.length - 1].time) {\n            //The newest records must be updated no matter what, push it to the list\n            recordsToUpdate.push(allRecords[allRecords.length - 1])\n            // console.log('update newest one')\n          }\n          recordsToUpdate.forEach(record => {\n            if (allTimestamps.indexOf(record.time) === allTimestamps.length - 1) {\n              //The most updated record, calculate the duration by now()\n              let difference = new Date().getTime() - record.time\n              let duration = this.getDuration(difference)\n              let line = this.getInfluxLine(record, duration, difference)\n              // console.log(record);\n              let url = utils.influxHost + 'write?db=smart_factory'\n              utils.post(url, line).then(res => {\n                // console.log(res)\n              }).catch(e => {\n                console.log(e)\n                if (!this.postgresConnectionErrorLogged) {\n                    utils.alert('error', 'Error', 'Unexpected error occurred while connection to the influx database')\n                }\n                this.postgresConnectionErrorLogged = true\n              })\n            }else {\n              //other records\n              let difference = allTimestamps[allTimestamps.indexOf(record.time) + 1] - record.time\n              let duration = this.getDuration(difference)\n              let line = this.getInfluxLine(record, duration, difference)\n            //   console.log('other updated');\n            //   console.log(line);\n              let url = utils.influxHost + 'write?db=smart_factory'\n              utils.post(url, line).then(res => {\n                // console.log(res)\n              }).catch(e => {\n                console.log(e)\n                if (!this.postgresConnectionErrorLogged) {\n                    utils.alert('error', 'Error', 'Unexpected error occurred while connection to the influx database')\n                }\n                this.postgresConnectionErrorLogged = true\n              })\n            }\n          })\n        }else {\n          //There is no column name duration\n          if (!this.durationMissingErrorLogged){\n            console.log('To calculate the duration of each event, the column name must be named as duration, both upper and lower cases would work')\n          }\n          this.durationMissingErrorLogged = true\n        }\n      }else {\n        //The table format is not TABLE\n        if (!this.errorLogged) {\n          console.log('To calculate the duration of each event, please format the data as a TABLE')\n        }\n        this.errorLogged = true\n      }\n    }\n  }\n\n  getRecords(cols, rows){\n    let records = []\n    for (let i = 0; i < rows.length; i++) {\n      const row = rows[i];\n      let record = {}\n      for (let k = 0; k < cols.length; k++) {\n        const col = cols[k];\n        record[col] = row[k]\n      }\n      records.push(record)\n    }\n    return records\n  }\n\n  getDuration(difference){\n\n    const milSecs = parseInt(difference%1000)\n\n    const daysDiff = Math.floor(difference/1000/60/60/24)\n    difference -= daysDiff*1000*60*60*24\n\n    let hrsDiff = Math.floor(difference/1000/60/60)\n    difference -= hrsDiff*1000*60*60\n\n    const minsDiff = ('0' + (Math.floor(difference/1000/60))).slice(-2)\n    difference -= minsDiff*1000*60\n\n    const secsDiff = ('0' + (Math.floor(difference/1000))).slice(-2)\n    difference -= minsDiff*1000\n\n    let timeToAdd = daysDiff * 24\n    hrsDiff = hrsDiff + timeToAdd\n    hrsDiff = (hrsDiff < 10) ? '0' + hrsDiff : hrsDiff\n\n    return hrsDiff + ':' + minsDiff + ':' + secsDiff + '.' + milSecs\n  }\n\n  getInfluxLine(record, duration, durationInt){\n    let line = 'Availability,Site=' + record.site + ',Area=' + record.area + ',Line=' + record.line + ' '\n\n    line += 'stopped=' + record.stopped + ','\n    line += 'idle=' + record.idle + ','\n    line += 'execute=' + record.execute + ','\n    line += 'held=' + record.held + ','\n    line += 'complete=' + record.complete + ','\n    line += 'status=\"' + record.status + '\"' + ','\n    \n    if (record.parentReason !== null && record.parentReason !== undefined) {\n      line += 'parentReason=\"' + record.parentReason + '\"' + ','\n    }\n\n    if (record.category !== null && record.category !== undefined) {\n      line += 'category=\"' + record.category + '\"' + ','\n    }\n    \n    if (record.reason !== null && record.reason !== undefined) {\n      line += 'reason=\"' + record.reason + '\"' + ','\n    }\n\n    line += 'durationInt=' + durationInt + ','\n    line += 'duration=\"' + duration + '\"' + ' '\n    \n    line += record.time * 1000000\n  \n    return line\n  }\n\n  normalInfluxLine(record){\n    let line = 'Availability,Site=' + record.site + ',Area=' + record.area + ',Line=' + record.line + ' '\n\n    line += 'stopped=' + record.stopped + ','\n    line += 'idle=' + record.idle + ','\n    line += 'execute=' + record.execute + ','\n    line += 'held=' + record.held + ','\n    line += 'complete=' + record.complete + ','\n\n    if (record.status !== null && record.status !== undefined) {\n      line += 'status=\"' + record.status + '\"' + ','\n    }\n\n    if (record.category !== null && record.category !== undefined) {\n      line += 'category=\"' + record.category + '\"' + ','\n    }\n    \n    if (record.reason !== null && record.reason !== undefined) {\n      line += 'reason=\"' + record.reason + '\"' + ','\n      line += 'parentReason=\"' + record.reason.split(' | ')[0] + '\"' + ','\n    }\n\n    if (record.durationInt !== null && record.durationInt !== undefined) {\n      line += 'durationInt=' + record.durationInt + ','\n    }\n\n    if (record.duration !== null && record.duration !== undefined) {\n      line += 'duration=\"' + record.duration + '\"' + ','\n    }\n    \n    line += record.time * 1000000\n  \n    return line\n  }\n\n  render() {\n    this.table = transformDataToTable(this.dataRaw, this.panel);\n    // console.log(this.panel.sort);\n    this.table.sort(this.panel.sort);\n    // console.log(this.panel.sort);\n    this.renderer = new TableRenderer(\n      this.panel,\n      this.table,\n      this.dashboard.isTimezoneUtc(),\n      this.$sanitize,\n      this.templateSrv,\n      this.col\n    );\n\n    return super.render(this.table);\n  }\n\n  toggleColumnSort(col, colIndex) {\n    // remove sort flag from current column\n    if (this.table.columns[this.panel.sort.col]) {\n      this.table.columns[this.panel.sort.col].sort = false;\n    }\n\n    if (this.panel.sort.col === colIndex) {\n      if (this.panel.sort.desc) {\n        this.panel.sort.desc = false;\n      } else {\n        this.panel.sort.col = null;\n      }\n    } else {\n      this.panel.sort.col = colIndex;\n      this.panel.sort.desc = true;\n    }\n    this.render();\n  }\n\n  exportCsv() {\n    const scope = this.$scope.$new(true);\n    scope.tableData = this.renderer.render_values();\n    scope.panel = 'table';\n    this.publishAppEvent('show-modal', {\n      templateHtml: '<export-data-modal panel=\"panel\" data=\"tableData\"></export-data-modal>',\n      scope,\n      modalClass: 'modal--narrow',\n    });\n  }\n\n  link(scope, elem, attrs, ctrl) {\n    let data;\n    const panel = ctrl.panel;\n    let pageCount = 0;\n\n    function getTableHeight() {\n      let panelHeight = ctrl.height;\n\n      if (pageCount > 1) {\n        panelHeight -= 26;\n      }\n\n      return panelHeight - 31 + 'px';\n    }\n\n    function appendTableRows(tbodyElem) {\n      ctrl.renderer.setTable(data);\n      tbodyElem.empty();\n      tbodyElem.html(ctrl.renderer.render(ctrl.pageIndex));\n    }\n\n    function switchPage(e) {\n      const el = $(e.currentTarget);\n      ctrl.pageIndex = parseInt(el.text(), 10) - 1;\n      renderPanel();\n    }\n\n    function appendPaginationControls(footerElem) {\n      footerElem.empty();\n\n      const pageSize = panel.pageSize || 100;\n      pageCount = Math.ceil(data.rows.length / pageSize);\n      if (pageCount === 1) {\n        return;\n      }\n\n      const startPage = Math.max(ctrl.pageIndex - 3, 0);\n      const endPage = Math.min(pageCount, startPage + 9);\n\n      const paginationList = $('<ul></ul>');\n\n      for (let i = startPage; i < endPage; i++) {\n        const activeClass = i === ctrl.pageIndex ? 'active' : '';\n        const pageLinkElem = $(\n          '<li><a class=\"table-panel-page-link pointer ' + activeClass + '\">' + (i + 1) + '</a></li>'\n        );\n        paginationList.append(pageLinkElem);\n      }\n\n      footerElem.append(paginationList);\n    }\n\n    function renderPanel() {\n      const panelElem = elem.parents('.panel-content');\n      const rootElem = elem.find('.table-panel-scroll');\n      const tbodyElem = elem.find('tbody');\n      const footerElem = elem.find('.table-panel-footer');\n\n      elem.css({ 'font-size': panel.fontSize });\n      panelElem.addClass('table-panel-content');\n\n      appendTableRows(tbodyElem);\n      appendPaginationControls(footerElem);\n\n      rootElem.css({ 'max-height': panel.scroll ? getTableHeight() : '' });\n    }\n\n    // hook up link tooltips\n    elem.tooltip({\n      selector: '[data-link-tooltip]',\n    });\n\n    function addFilterClicked(e) {\n      const filterData = $(e.currentTarget).data();\n      const options = {\n        datasource: panel.datasource,\n        key: data.columns[filterData.column].text,\n        value: data.rows[filterData.row][filterData.column],\n        operator: filterData.operator,\n      };\n\n      ctrl.variableSrv.setAdhocFilter(options);\n    }\n\n    elem.on('click', '.table-panel-page-link', switchPage);\n    elem.on('click', '.table-panel-filter-link', addFilterClicked);\n\n    const unbindDestroy = scope.$on('$destroy', () => {\n      elem.off('click', '.table-panel-page-link');\n      elem.off('click', '.table-panel-filter-link');\n      unbindDestroy();\n    });\n\n    ctrl.events.on('render', renderData => {\n      data = renderData || data;\n      if (data) {\n        renderPanel();\n      }\n      ctrl.renderingCompleted();\n    });\n  }\n\n}\n\nTableCtrl.templateUrl = './partials/module.html';\n"]}