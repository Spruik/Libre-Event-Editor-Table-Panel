{"version":3,"sources":["../src/influxAPI.js"],"names":["isOK","val","undefined","utils","insert","measurement","current","data","line","writeLine","url","influxHost","result","sure","post","split","newTimeStamp","currentEvent","form","oldTimeStamp","min","maxTimeStamp","max","lineForLeft","writeSplitLine","record","lineForRight","influxDBName","leftResult","ok","rightResult","cur","timestamp","addSlash","site","area","stopped","idle","execute","held","complete","status","machinestate","actual_rate","rid_1","comment","equipment","reasons","length","join","category","isLeftLine","meta","isSplittingLeft","parentreason","reason","substring"],"mappings":"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","file":"influxAPI.js","sourcesContent":["import * as utils from './utils';\n\nexport const insert = async (measurement, current, data) => {\n\tconst line = writeLine(measurement, current, data);\n\tconst url = `${utils.influxHost}write?db=smart_factory`;\n\tconst result = await utils.sure(utils.post(url, line));\n\treturn result;\n};\n\nexport const split = async (newTimeStamp, currentEvent, form, measurement) => {\n\tconst oldTimeStamp = form.min * 1000000;\n\tconst maxTimeStamp = form.max * 1000000;\n\n\tconst lineForLeft = writeSplitLine(\n\t\toldTimeStamp,\n\t\tnewTimeStamp,\n\t\tmaxTimeStamp,\n\t\tcurrentEvent.record,\n\t\tform,\n\t\tmeasurement,\n\t\ttrue\n\t);\n\tconst lineForRight = writeSplitLine(\n\t\toldTimeStamp,\n\t\tnewTimeStamp,\n\t\tmaxTimeStamp,\n\t\tcurrentEvent.record,\n\t\tform,\n\t\tmeasurement,\n\t\tfalse\n\t);\n\n\tconst url = `${utils.influxHost}write?db=${utils.influxDBName}`;\n\n\tconst leftResult = await utils.sure(utils.post(url, lineForLeft));\n\tif (!leftResult.ok) {\n\t\treturn leftResult;\n\t}\n\tconst rightResult = await utils.sure(utils.post(url, lineForRight));\n\tif (!rightResult.ok) {\n\t\treturn rightResult;\n\t}\n\n\treturn rightResult;\n};\n\nconst writeLine = (measurement, current, data) => {\n\tconst cur = current.record;\n\tconst timestamp = current.timestamp;\n\n\tlet line = `${measurement},Site=${utils.addSlash(cur.site)},Area=${utils.addSlash(cur.area)},Line=${utils.addSlash(\n\t\tcur.line\n\t)} `;\n\n\tif (isOK(cur.stopped)) {\n\t\tline += `stopped=${cur.stopped},`;\n\t}\n\tif (isOK(cur.idle)) {\n\t\tline += `idle=${cur.idle},`;\n\t}\n\tif (isOK(cur.execute)) {\n\t\tline += `execute=${cur.execute},`;\n\t}\n\tif (isOK(cur.held)) {\n\t\tline += `held=${cur.held},`;\n\t}\n\tif (isOK(cur.complete)) {\n\t\tline += `complete=${cur.complete},`;\n\t}\n\n\tif (isOK(cur.status)) {\n\t\tline += `status=\"${cur.status}\",`;\n\t}\n\tif (isOK(cur.machinestate)) {\n\t\tline += `MachineState=\"${cur.machinestate}\",`;\n\t}\n\n\tif (isOK(cur.actual_rate)) {\n\t\tline += `actual_rate=${cur.actual_rate},`;\n\t}\n\n\tif (isOK(cur.rid_1)) {\n\t\tline += `rid_1=\"${cur.rid_1}\",`;\n\t}\n\n\tline += isOK(data.comment) ? `comment=\"${data.comment}\",` : `comment=\"\",`;\n\tline += isOK(data.equipment) ? `equipment=\"${data.equipment}\",` : `equipment=\"\",`;\n\n\tif (data.reasons.length !== 0) {\n\t\tline += `parentReason=\"${data.reasons[0]}\",`;\n\t\tline += `reason=\"${data.reasons.join(' | ')}\",`;\n\t}\n\tline += `category=\"${data.category}\" `;\n\tline += timestamp;\n\n\treturn line;\n};\n\nconst writeSplitLine = (oldTimeStamp, newTimeStamp, maxTimeStamp, cur, form, measurement, isLeftLine) => {\n\tlet line = `${measurement},Site=${utils.addSlash(cur.site)},Area=${utils.addSlash(cur.area)},Line=${utils.addSlash(\n\t\tcur.line\n\t)} `;\n\tif (isOK(cur.stopped)) {\n\t\tline += `stopped=${cur.stopped},`;\n\t}\n\tif (isOK(cur.idle)) {\n\t\tline += `idle=${cur.idle},`;\n\t}\n\tif (isOK(cur.execute)) {\n\t\tline += `execute=${cur.execute},`;\n\t}\n\tif (isOK(cur.held)) {\n\t\tline += `held=${cur.held},`;\n\t}\n\tif (isOK(cur.complete)) {\n\t\tline += `complete=${cur.complete},`;\n\t}\n\tif (isOK(cur.status)) {\n\t\tline += `status=\"${cur.status}\",`;\n\t}\n\tif (isOK(cur.machinestate)) {\n\t\tline += `MachineState=\"${cur.machinestate}\",`;\n\t}\n\tif (isOK(cur.actual_rate)) {\n\t\tline += `actual_rate=${cur.actual_rate},`;\n\t}\n\tif (isOK(cur.rid_1)) {\n\t\tline += `rid_1=\"${cur.rid_1}\",`;\n\t}\n\n\tif (isLeftLine) {\n\t\t// writing left line\n\t\tif (form.meta.isSplittingLeft) {\n\t\t\t// is splitting left\n\t\t\tline += isOK(form.comment) ? `comment=\"${form.comment}\",` : `comment=\"\",`;\n\t\t\tline += isOK(form.equipment) ? `equipment=\"${form.equipment}\",` : `equipment=\"\",`;\n\t\t\tif (isOK(form.category)) {\n\t\t\t\tline += `category=\"${form.category}\",`;\n\t\t\t}\n\t\t\tif (isOK(form.reasons)) {\n\t\t\t\tline += `parentReason=\"${form.reasons.split(' | ')[0]}\",`;\n\t\t\t\tline += `reason=\"${form.reasons}\",`;\n\t\t\t}\n\t\t} else {\n\t\t\t// is splitting right\n\t\t\tif (isOK(cur.comment)) {\n\t\t\t\tline += `comment=\"${cur.comment}\",`;\n\t\t\t}\n\t\t\tif (isOK(cur.equipment)) {\n\t\t\t\tline += `equipment=\"${cur.equipment}\",`;\n\t\t\t}\n\t\t\tif (isOK(cur.category)) {\n\t\t\t\tline += `category=\"${cur.category}\",`;\n\t\t\t}\n\t\t\tif (isOK(cur.parentreason)) {\n\t\t\t\tline += `parentReason=\"${cur.parentreason}\",`;\n\t\t\t}\n\t\t\tif (isOK(cur.reason)) {\n\t\t\t\tline += `reason=\"${cur.reason}\",`;\n\t\t\t}\n\t\t}\n\n\t\tif (line[line.length - 1] === ',') {\n\t\t\tline = line.substring(0, line.length - 1);\n\t\t}\n\t\tline += ' ' + oldTimeStamp;\n\t} else {\n\t\t// write right line\n\t\tif (!form.meta.isSplittingLeft) {\n\t\t\t// is splitting right\n\t\t\tline += isOK(form.comment) ? `comment=\"${form.comment}\",` : `comment=\"\",`;\n\t\t\tline += isOK(form.equipment) ? `equipment=\"${form.equipment}\",` : `equipment=\"\",`;\n\t\t\tif (isOK(form.category)) {\n\t\t\t\tline += `category=\"${form.category}\",`;\n\t\t\t}\n\t\t\tif (isOK(form.reasons)) {\n\t\t\t\tline += `parentReason=\"${form.reasons.split(' | ')[0]}\",`;\n\t\t\t\tline += `reason=\"${form.reasons}\",`;\n\t\t\t}\n\t\t}\n\n\t\tif (line[line.length - 1] === ',') {\n\t\t\tline = line.substring(0, line.length - 1);\n\t\t}\n\t\tline += ' ' + newTimeStamp;\n\t}\n\n\treturn line;\n};\n\nfunction isOK(val) {\n\treturn val !== null && val !== undefined && val !== '' && val !== 'No Category' && val !== 'No Reasons';\n}\n"]}