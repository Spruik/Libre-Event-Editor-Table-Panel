{"version":3,"sources":["../src/split_event_form.js"],"names":["showSplitForm","options","current","next","dataInit","appEvents","emit","src","modalClass","model","retryTimes","startCtr","setTimeout","startCtrl","e","console","log","$","trigger","utils","alert","min","Date","currentRecord","time","getTime","max","isEmptyObject","nextRecord","value","val","getDateTime","text","categoryStr","reasonsStr","equipmentStr","slider","step","tooltip","formatter","css","on","newVal","obj","newValue","removeListeners","addListeners","timestamp","monthDate","getDate","slice","month","getMonth","year","getFullYear","date","hrs","getHours","mins","getMinutes","seconds","getSeconds","milSec","getMilliseconds","dateTime","document","isTimeEditing","enableTimeEdition","checkValidationThenApply","disableTimeEdition","target","id","show","hide","isSplittingLeft","splitFormSubmitListener","off","newTimestamp","oldTimestamp","maxTimestamp","lineForLeft","lineForRight","writeInfluxLine","url","influxHost","post","then","refreshPanel","catch","isNaN","length","parseInt","input","removeAttr","focus","innerHTML","prop","category","filter","opt","name","reasons","includes","reduce","arr","r","push","equipment","join","cur","reason","minTime","selectedTime","maxTime","isLeft","forLeft","line","Site","Area","Line","stopped","idle","execute","held","complete","status","comment","undefined","diff","dur","getDuration","substring","split","difference","milSecs","daysDiff","Math","floor","hrsDiff","minsDiff","secsDiff","timeToAdd"],"mappings":"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","file":"split_event_form.js","sourcesContent":["import { appEvents } from 'app/core/core'\nimport * as utils from './utils'\nimport { refreshPanel } from './table_ctrl'\n\nlet currentRecord = {}\nlet nextRecord = {}\nlet min, max\nlet reasonsStr\nlet categoryStr\nlet equipmentStr\nlet isTimeEditing = false\nlet isSplittingLeft = true\nlet retryTimes = 1\n/**\n * Show the split form with @param [array] options , which is an arr with category and reasons chosen in the editor form\n * and the @param {obj} current , current record/row that was clicked in the form\n * and the @param {obj} next , next record of the record/row that was clicked in the form\n */\nfunction showSplitForm (options, current, next) {\n  dataInit(options, current, next)\n\n  appEvents.emit('show-modal', {\n    src: 'public/plugins/smart-factory-event-editor-table-panel/partials/split_event_form.html',\n    modalClass: 'confirm-modal event-split-form-modal',\n    model: {}\n  })\n\n  retryTimes = 1\n  startCtr()\n}\n\nfunction startCtr(){\n  setTimeout(() => {\n    try {\n      startCtrl()\n    } catch (e) {\n      if (retryTimes > 15) {\n        console.log(e);\n        $('#event-split-form-cancelBtn').trigger('click')\n        utils.alert('error', 'Error', 'Split Form init failed due to the form trying to initialise and at the same time the page being refreshing, please try agian')\n      }else {\n        // console.log('Split Form init failed due to the page being refreshing, re-initialising...the ' + retryTimes + 'th time');\n        startCtr()\n        console.log(e);\n        retryTimes ++\n      }\n    }\n  }, 200);\n}\n\n/**\n * Initialise the time range slider\n * Remove all listeners then adding them back\n * Some other input initialisations\n */\nfunction startCtrl () {\n  // console.log(new Date(currentRecord.time).getTime());\n  // console.log(new Date().getTime());\n  // console.log(new Date(nextRecord.time).getTime());\n  \n  \n  min = new Date(currentRecord.time).getTime()\n  max = $.isEmptyObject(nextRecord)\n    ? new Date().getTime()\n    : new Date(nextRecord.time).getTime()\n  let value = min + (max - min) / 2\n\n  $('#event-split-input').val(getDateTime(value))\n  $('#event-split-target-time').text(getDateTime(min))\n  $('#event-split-next-time').text(getDateTime(max))\n  $('#event-split-category-left').text(categoryStr + ', ' + reasonsStr + equipmentStr)\n  $('#event-split-category-right').text(categoryStr + ', ' + reasonsStr + equipmentStr)\n\n  let slider = $('#event-editor-table-split-slider').slider({\n    min: min,\n    max: max,\n    value: value,\n    step: 1,\n    tooltip: 'hide',\n    formatter: val => {\n      return getDateTime(val)\n    }\n  })\n\n  $('#ex1Slider .slider-selection').css('background', '#4cd964')\n\n  slider.on('change', obj => {\n    let newVal = obj.value.newValue\n    $('#event-split-input').val(getDateTime(newVal))\n  })\n\n  removeListeners()\n  addListeners()\n}\n\n/**\n * Pass the timestamp in and return the date and time in the following format\n * YYYY-MM-DD HH:MM:SS.SSS\n * @param {*} timestamp\n */\nfunction getDateTime (timestamp) {\n  const monthDate = ('0' + new Date(timestamp).getDate()).slice(-2)\n  const month = ('0' + (new Date(timestamp).getMonth() + 1)).slice(-2)\n  const year = new Date(timestamp).getFullYear()\n  let date = year + '-' + month + '-' + monthDate\n\n  let hrs = ('0' + new Date(timestamp).getHours()).slice(-2)\n  let mins = ('0' + new Date(timestamp).getMinutes()).slice(-2)\n  let seconds = ('0' + new Date(timestamp).getSeconds()).slice(-2)\n  let milSec = new Date(timestamp).getMilliseconds()\n  let time = hrs + ':' + mins + ':' + seconds + '.' + milSec\n\n  let dateTime = date + ' ' + time\n  return dateTime\n}\n\n/**\n * Add listeners\n */\nfunction addListeners () {\n  let time\n\n  $(document).on('click', '#event-split-input-saveBtn', e => {\n    if (!isTimeEditing) {\n      // start editing\n      time = $('#event-split-input').val()\n      enableTimeEdition(e)\n    } else {\n      // save changes\n      checkValidationThenApply($('#event-split-input').val(), time)\n      disableTimeEdition()\n    }\n  })\n\n  $(document).on('click', '#event-split-input-cancelSpan', () => {\n    disableTimeEdition()\n    if (time) {\n      $('#event-split-input').val(time)\n    }\n  })\n\n  // Handler for user to split left and right\n  $(document).on('click', 'input[type=radio][name=split-options]', e => {\n    if (e.target.id === 'left') {\n      $('#ex1Slider .slider-selection').css('background', '#4cd964')\n      $('#ex1Slider .slider-track-high').css('background', '')\n      $('#event-split-category-left').show()\n      $('#event-split-category-right').hide()\n      isSplittingLeft = true\n    } else if (e.target.id === 'right') {\n      $('#ex1Slider .slider-selection').css('background', '')\n      $('#ex1Slider .slider-track-high').css('background', '#eb972a')\n      $('#event-split-category-left').hide()\n      $('#event-split-category-right').show()\n      isSplittingLeft = false\n    }\n  })\n\n  splitFormSubmitListener()\n}\n\n/**\n * Remove listeners\n */\nfunction removeListeners () {\n  $(document).off('click', '#event-split-input-cancelSpan')\n  $(document).off('click', '#event-split-input-saveBtn')\n  $(document).off('click', 'input[type=radio][name=split-options]')\n  $(document).off('click', '#event-split-form-submitBtn')\n}\n\n/**\n * Submit listener for the split form.\n * Update the current record and create a new record based on different conditions via xmlhttprequests\n * Then close the form at the end if successful\n */\nfunction splitFormSubmitListener () {\n  $(document).on('click', '#event-split-form-submitBtn', e => {\n    let newTimestamp = $('#event-editor-table-split-slider').slider('getValue') * 1000000\n    let oldTimestamp = min * 1000000\n    let maxTimestamp = max * 1000000\n    let lineForLeft\n    let lineForRight\n\n    if (isSplittingLeft) {\n      lineForLeft = writeInfluxLine(currentRecord,categoryStr,reasonsStr,equipmentStr,oldTimestamp,newTimestamp,maxTimestamp,isSplittingLeft,true)\n      lineForRight = writeInfluxLine(currentRecord,null,null,null,oldTimestamp,newTimestamp,maxTimestamp,isSplittingLeft,false)\n    } else {\n      // splitting right\n      lineForLeft = writeInfluxLine(currentRecord,null,null,null,oldTimestamp,newTimestamp,maxTimestamp,isSplittingLeft,true)\n      lineForRight = writeInfluxLine(currentRecord,categoryStr,reasonsStr,equipmentStr,oldTimestamp,newTimestamp,maxTimestamp,isSplittingLeft,false)\n    }\n\n    let url = utils.influxHost + 'write?db=smart_factory'\n    utils.post(url, lineForLeft)\n      .then(\n        utils.post(url, lineForRight)\n          .then(res => {\n            // console.log(res)\n            $('#event-split-form-cancelBtn').trigger('click')\n            utils.alert('success', 'Success', 'Event successfully splitted')\n            refreshPanel()\n          })\n          .catch(e => {\n            console.log(e)\n            $('#event-split-form-cancelBtn').trigger('click')\n            utils.alert('error', 'Error', 'An error occurred while updating data to the database, please try again')\n          })\n      )\n      .catch(e => {\n        console.log(e)\n        $('#event-split-form-cancelBtn').trigger('click')\n        utils.alert('error', 'Error', 'An error occurred while updating data to the database, please try again')\n\n      })\n  })\n}\n\n/**\n * Validate the input when the user try to save the edited time range in the top box.\n * The 'value' passed in is the input that the user entered, -\n * and the 'time' passed in is the current value of the slider.\n * If 'value' not valid, set the slider back to 'time'\n * If 'value' valid, set the slider to 'value'\n * @param {string} value\n * @param {string} time\n */\nfunction checkValidationThenApply (value, time) {\n  let dateTime = new Date(value).getTime()\n  if (isNaN(dateTime)) {\n    // error - The date time entered is not in a correct format, please follow the original format\n    $('#event-split-input').val(time)\n    utils.alert('warning', 'Warning', 'The date time entered is not in a correct format, please follow the original format')\n  } else {\n    // at lease provide precision of s\n    if (value.length < 19) {\n      // error - Please at least provide precision of seconds\n      $('#event-split-input').val(time)\n      utils.alert('warning', 'Warning', 'Please at least provide precision of seconds')\n    } else if (value.length > 23) {\n      // error - Precision can only be up to milliseconds\n      $('#event-split-input').val(time)\n      utils.alert('warning', 'Warning', 'Precision can only be up to milliseconds')\n    } else {\n      // result timestamp must be in range\n      if (dateTime < min || dateTime > max) {\n        // error - date time entered is out of range\n        $('#event-split-input').val(time)\n        utils.alert('warning', 'Warning', 'The date time entered is out of range')\n      } else {\n        // OK\n        $('#event-editor-table-split-slider').slider('setValue', parseInt(dateTime))\n      }\n    }\n  }\n}\n\n/**\n * Enable the input edition\n * By removing the input readonly, changing 'edit' button text back to 'save' and showing the 'cancel' button\n */\nfunction enableTimeEdition (e) {\n  let input = $('#event-split-input')\n  input.removeAttr('readonly')\n  input.focus()\n  e.target.innerHTML = 'Save'\n  $('#event-split-input-cancelSpan').show()\n  isTimeEditing = true\n}\n\n/**\n * Disable the input edition\n * By setting the input readonly, changing 'save' button text back to 'edit' and hiding the 'cancel' button\n */\nfunction disableTimeEdition () {\n  $('#event-split-input').prop('readonly', true)\n  $('#event-split-input-saveBtn').text('Edit')\n  $('#event-split-input-cancelSpan').hide()\n  isTimeEditing = false\n}\n\n/**\n * Initialisation of data, handling data and then set them global\n * @param {*} options\n * @param {*} current\n * @param {*} next\n */\nfunction dataInit (options, current, next) {\n  currentRecord = current\n  nextRecord = next\n  // console.log(options);\n  const category = options.filter(opt => opt.name === 'category')\n\n  let reasons = options.filter(opt => opt.name.includes('reasons-'))\n  reasons = reasons.reduce((arr, r) => {\n    arr.push(r.value)\n    return arr\n  }, [])\n\n  const equipment = options.filter(opt => opt.name === 'equipment')\n  \n  categoryStr = category.length > 0 ? category[0].value : 'NO Category'\n  reasonsStr = reasons.length > 0 ? reasons.join(' | ') : 'NO Reasons'\n  equipmentStr = equipment[0].value === \"\" ? '' : ', from ' + equipment[0].value\n\n  isTimeEditing = false\n  isSplittingLeft = true\n}\n\n/**\n * Convert the data into a influxdb writing format based on different conditions\n * Return 'line' in string\n * @param {*} cur\n * @param {*} category\n * @param {*} reason\n * @param {*} timestamp\n * @param {*} isLeft\n * @param {*} forLeft\n */\nfunction writeInfluxLine (cur, category, reason, equipment, minTime, selectedTime, maxTime, isLeft, forLeft) {\n  let line = 'Availability,Site=' + cur.Site + ',Area=' + cur.Area + ',Line=' + cur.Line + ' '\n  line += 'stopped=' + cur.stopped + ','\n  line += 'idle=' + cur.idle + ','\n  line += 'execute=' + cur.execute + ','\n  line += 'held=' + cur.held + ','\n  line += 'complete=' + cur.complete\n  line += ',' + 'status=\"' + cur.status + '\"'\n\n  if (forLeft) {\n    if (cur.comment !== null && cur.comment !== undefined && cur.comment !== '') {\n      line += ',' + 'comment=\"' + cur.comment + '\"'\n    }\n    //update duration after splitting\n    let diff = selectedTime - minTime\n    let dur = getDuration(diff)\n    line += ',' + 'durationInt=' + diff/1000000\n    line += ',' + 'duration=\"' + dur + '\"'\n  }else {\n    //update duration after splitting\n    let diff = maxTime - selectedTime\n    let dur = getDuration(diff)\n    line += ',' + 'durationInt=' + diff/1000000\n    line += ',' + 'duration=\"' + dur + '\"'\n  }\n\n  if (category !== 'NO Category' && category !== null) {\n    line += ',' + 'category=\"' + category + '\"'\n  } else {\n    // cate empty, insert the old one\n    if (forLeft) {\n      if (cur.category !== null && cur.category !== undefined) {\n        line += ',' + 'category=\"' + cur.category + '\"'\n      }\n    }\n  }\n\n  if (equipment !== \"\" && equipment !== null) {\n    line += ',' + 'equipment=\"' + equipment.substring(7, equipment.length) + '\"'\n  } else {\n    // cate empty, insert the old one\n    if (forLeft) {\n      if (cur.equipment !== null && cur.equipment !== undefined) {\n        line += ',' + 'equipment=\"' + cur.equipment + '\"'\n      }\n    }\n  }\n\n  if (reason !== 'NO Reasons' && reason !== null) {\n    line += ',' + 'parentReason=\"' + reason.split(' | ')[0] + '\"'\n    line += ',' + 'reason=\"' + reason + '\"'\n  } else {\n    // reason empty, insert the old one\n    if (forLeft) {\n      // write only for left record\n      if (category === 'NO Category') {\n        // insert old record only when category is empty, meaning that the user hasn't changed anything\n        if (cur.reason !== null && cur.reason !== undefined) {\n          line += ',' + 'parentReason=\"' + cur.reason.split(' | ')[0] + '\"'\n          line += ',' + 'reason=\"' + cur.reason + '\"'\n        }\n      } else {\n        // otherwise, empty the reason filed no matter what\n        if (isLeft) {          \n          line += ',' + 'reason=' + '\"\"'\n        } else {\n          // is splitting right, the left record should have the old data\n          if (cur.reason !== null && cur.reason !== undefined) {\n            line += ',' + 'parentReason=\"' + cur.reason.split(' | ')[0] + '\"'\n            line += ',' + 'reason=\"' + cur.reason + '\"'\n          }\n        }\n      }\n    }\n  }\n\n  if (forLeft) {\n    line += ' ' + minTime\n  }else {\n    line += ' ' + selectedTime\n  }\n    \n  return line\n}\n\n/**\n * Get two timestamps and return the difference in a fixed format\n * @param {*} prev \n * @param {*} now \n */\nfunction getDuration(diff){\n\n    let difference = diff/1000000\n    const milSecs = parseInt(difference%1000)\n\n    const daysDiff = Math.floor(difference/1000/60/60/24)\n    difference -= daysDiff*1000*60*60*24\n\n    let hrsDiff = Math.floor(difference/1000/60/60)\n    difference -= hrsDiff*1000*60*60\n\n    const minsDiff = ('0' + (Math.floor(difference/1000/60))).slice(-2)\n    difference -= minsDiff*1000*60\n\n    const secsDiff = ('0' + (Math.floor(difference/1000))).slice(-2)\n    difference -= minsDiff*1000\n\n    let timeToAdd = daysDiff * 24\n    hrsDiff = hrsDiff + timeToAdd\n    hrsDiff = (hrsDiff < 10) ? '0' + hrsDiff : hrsDiff\n\n    return hrsDiff + ':' + minsDiff + ':' + secsDiff + '.' + milSecs\n}\n\nexport { showSplitForm }\n"]}