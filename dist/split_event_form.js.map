{"version":3,"sources":["../src/split_event_form.js"],"names":["utils","influx","slider","SplitEventCtrl","ctrl","init","prepare","panelCtrl","currentEvent","nextEvent","editForm","splitForm","meta","isSplittingLeft","isEditing","isSaving","tempVal","saveBtnMsg","min","Date","record","time","getTime","max","value","splitInput","getDateTime","targetTime","nextTime","category","isValidVal","reasons","length","join","cateReaText","equipment","comment","showModal","$","step","tooltip","formatter","val","css","on","newVal","obj","newValue","result","event","id","target","splitLeft","splitRight","temp","dateTime","isNaN","alert","parseInt","panel","measurementOK","enableSaving","newTimestamp","split","endPoint","ok","closeForm","refresh","error","console","log","disableSaving","setTimeout","document","querySelector","click","timestamp","monthDate","getDate","slice","month","getMonth","year","getFullYear","date","hrs","getHours","mins","getMinutes","seconds","getSeconds","milSec","getMilliseconds"],"mappings":"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","file":"split_event_form.js","sourcesContent":["import * as utils from './utils'\nimport * as influx from './influxAPI'\nimport slider from './libs/bootstrap-slider'\n\n\nexport class SplitEventCtrl {\n  /** @ngInject */\n  constructor(ctrl) {\n    this.init(ctrl)\n    this.prepare()\n  } \n\n  init(ctrl) {\n    this.panelCtrl = ctrl.panelCtrl;\n    this.currentEvent = ctrl.currentEvent\n    this.nextEvent = ctrl.nextEvent\n    this.editForm = ctrl.editForm\n    this.splitForm = {\n      meta: {\n        isSplittingLeft: true,\n        isEditing: false,\n        isSaving: false,\n        tempVal: null\n      },\n      saveBtnMsg: 'Save'\n    }\n  }\n\n  prepare() {\n    this.splitForm.min = new Date(this.currentEvent.record.time).getTime()\n    this.splitForm.max = this.nextEvent.record? new Date(this.nextEvent.record.time).getTime() : new Date().getTime()\n    this.splitForm.value = this.splitForm.min + (this.splitForm.max - this.splitForm.min) / 2\n    this.splitForm.splitInput = this.getDateTime(this.splitForm.value)\n    this.splitForm.targetTime = this.getDateTime(this.splitForm.min)\n    this.splitForm.nextTime = this.getDateTime(this.splitForm.max)\n    this.splitForm.category = utils.isValidVal(this.editForm.category) ? this.editForm.category : 'No Category'\n    this.splitForm.reasons = this.editForm.reasons.length !== 0 ? this.editForm.reasons.join(' | ') : 'No Reasons'\n    this.splitForm.cateReaText = this.splitForm.category === 'No Category' \n      ? 'No Category' \n      : `${this.splitForm.category} - ${this.splitForm.reasons}`\n    this.splitForm.equipment = this.editForm.equipment\n    this.splitForm.comment = this.editForm.comment\n  }\n\n  show() {\n    utils.showModal('split_event_form.html', this, 'confirm-modal event-split-form-modal')\n  }\n\n  enableSlider() {\n    let slider = $('#event-editor-table-split-slider').slider({\n      min: this.splitForm.min,\n      max: this.splitForm.max,\n      value: this.splitForm.value,\n      step: 1,\n      tooltip: 'hide',\n      formatter: val => {\n        return this.getDateTime(val)\n      }\n    })\n\n    $('#ex1Slider .slider-selection').css('background', '#4cd964')\n    \n    slider.on('change', obj => {\n      const newVal = obj.value.newValue\n      const result = this.getDateTime(newVal)\n      this.splitForm.splitInput = result\n      $('#event-split-input').val(result)\n    })\n  }\n\n  onSplitChange(event) {\n    const id = event.target.id\n    if(id === 'left') {\n      this.splitLeft()\n    }else {\n      this.splitRight()\n    }\n  }\n\n  onTopBoxSave() {\n    const temp = this.splitForm.meta.tempVal\n    const val = this.splitForm.splitInput\n\n    const dateTime = new Date(val).getTime()\n    if (isNaN(dateTime)) {\n      this.splitForm.splitInput = temp\n      utils.alert('warning', 'Warning', 'The date time entered is not in a correct format, please follow the original format')\n    } else {\n      if (val.length < 19) {\n        this.splitForm.splitInput = temp\n        utils.alert('warning', 'Warning', 'Please at least provide precision of seconds')\n      } else if (val.length > 23) {\n        this.splitForm.splitInput = temp\n        utils.alert('warning', 'Warning', 'Precision can only be up to milliseconds')\n      } else {\n        if (dateTime < this.splitForm.min || dateTime > this.splitForm.max) {\n          this.splitForm.splitInput = temp\n          utils.alert('warning', 'Warning', 'The date time entered is out of range')\n        } else {\n          //OK\n          this.splitForm.meta.isEditing = false\n          $('#event-editor-table-split-slider').slider('setValue', parseInt(dateTime))\n        }\n      }\n    }\n  }\n\n  onTopBoxCancel() {\n    this.splitForm.splitInput = this.splitForm.meta.tempVal\n    this.splitForm.meta.isEditing = false\n  }\n\n  async onFormSave() {\n    if(!this.panelCtrl.panel.measurementOK) {\n      utils.alert('warning', 'Warning', \"The measurement you put in the Down Time Panel may be invalid, please make sure it matches the one that's in the query\")\n      return\n    }\n\n    this.enableSaving()\n\n    const newTimestamp = $('#event-editor-table-split-slider').slider('getValue') * 1000000\n    const result = await influx.split(newTimestamp, this.currentEvent, this.splitForm, this.panelCtrl.panel.endPoint)\n\n    if (result.ok) {\n      utils.alert('success', 'Successful', `The event has been successfully splitted`)\n      this.closeForm()\n      this.panelCtrl.refresh()\n    } else {\n      utils.alert('error', 'Error', `Unexpected error occurred when splitting this event due to ${result.error}, please try agian or contact the dev team`)\n      this.closeForm()\n      console.log(result.error)\n    }\n  }\n\n  splitLeft() {\n    this.splitForm.meta.isSplittingLeft = true\n    $('#ex1Slider .slider-selection').css('background', '#4cd964')\n    $('#ex1Slider .slider-track-high').css('background', '')\n  }\n\n  splitRight() {\n    this.splitForm.meta.isSplittingLeft = false\n    $('#ex1Slider .slider-selection').css('background', '')\n    $('#ex1Slider .slider-track-high').css('background', '#eb972a')\n  }\n\n  closeForm() {\n    this.disableSaving()\n    setTimeout(() => {\n      document.querySelector('#eetp-split-form-closeBtn').click()\n    }, 0);\n  }\n\n  enableSaving() {\n    this.splitForm.meta.isSaving = true\n    this.splitForm.saveBtnMsg = 'Saving... '\n  }\n\n  disableSaving() {\n    this.splitForm.meta.isSaving = false\n    this.splitForm.saveBtnMsg = 'Save'\n  }\n\n  getDateTime(timestamp) {\n    const monthDate = ('0' + new Date(timestamp).getDate()).slice(-2)\n    const month = ('0' + (new Date(timestamp).getMonth() + 1)).slice(-2)\n    const year = new Date(timestamp).getFullYear()\n    let date = year + '-' + month + '-' + monthDate\n  \n    let hrs = ('0' + new Date(timestamp).getHours()).slice(-2)\n    let mins = ('0' + new Date(timestamp).getMinutes()).slice(-2)\n    let seconds = ('0' + new Date(timestamp).getSeconds()).slice(-2)\n    let milSec = new Date(timestamp).getMilliseconds()\n    let time = hrs + ':' + mins + ':' + seconds + '.' + milSec\n  \n    let dateTime = date + ' ' + time\n    return dateTime\n  }\n\n}"]}