{"version":3,"sources":["../src/utils.js"],"names":["appEvents","hostname","window","location","http","postgRestHost","influxHost","influxDBName","tasklistHostName","camundaHost","camundaRestApi","get","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onreadystatechange","handleResponse","onerror","e","send","readyState","status","res","JSON","parse","responseText","statusText","post","line","addSlash","target","split","join","alert","type","title","msg","emit","showModal","html","data","mClass","src","modalClass","model","isValidVal","val","undefined","sure","promise","then","ok","catch","error","copy","obj","stringify"],"mappings":"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","file":"utils.js","sourcesContent":["import { appEvents } from 'app/core/core';\n\nconst hostname = window.location.hostname;\nconst http = 'http://';\nexport const postgRestHost = http + hostname + ':5436/';\nexport const influxHost = http + hostname + ':8086/';\nexport const influxDBName = 'smart_factory';\n\nlet tasklistHostName = hostname;\nif (tasklistHostName === 'localhost') {\n\ttasklistHostName = '127.0.0.1';\n}\nexport const camundaHost = http + tasklistHostName + ':8080/camunda/app/tasklist';\nexport const camundaRestApi = http + hostname + ':8080/engine-rest/';\n\nexport const get = (url) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', url);\n\t\txhr.onreadystatechange = handleResponse;\n\t\txhr.onerror = (e) => reject(e);\n\t\txhr.send();\n\n\t\tfunction handleResponse() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\tvar res = JSON.parse(xhr.responseText);\n\t\t\t\t\tresolve(res);\n\t\t\t\t} else {\n\t\t\t\t\treject(this.statusText);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\nexport const post = (url, line) => {\n\treturn new Promise((resolve, reject) => {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('POST', url);\n\t\txhr.onreadystatechange = handleResponse;\n\t\txhr.onerror = (e) => reject(e);\n\t\txhr.send(line);\n\n\t\tfunction handleResponse() {\n\t\t\tif (xhr.readyState === 4) {\n\t\t\t\tif (xhr.status === 200) {\n\t\t\t\t\t// console.log('200');\n\t\t\t\t\tvar res = JSON.parse(xhr.responseText);\n\t\t\t\t\tresolve(res);\n\t\t\t\t} else if (xhr.status === 204) {\n\t\t\t\t\t// console.log('204');\n\t\t\t\t\tres = xhr.responseText;\n\t\t\t\t\tresolve(res);\n\t\t\t\t} else {\n\t\t\t\t\treject(this.statusText);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n};\n\nexport const addSlash = (target) => {\n\treturn target.split(' ').join(`\\\\ `);\n};\n\nexport const alert = (type, title, msg) => {\n\tappEvents.emit('alert-' + type, [ title, msg ]);\n};\n\nexport const showModal = (html, data, mClass) => {\n\tappEvents.emit('show-modal', {\n\t\tsrc: 'public/plugins/smart-factory-event-editor-table-panel/partials/' + html,\n\t\tmodalClass: mClass || 'confirm-modal',\n\t\tmodel: data\n\t});\n};\n\nexport const isValidVal = (val) => {\n\treturn val !== null && val !== undefined && val !== '';\n};\n\nexport const sure = (promise) =>\n\tpromise.then((data) => ({ ok: true, data })).catch((error) => Promise.resolve({ ok: false, error }));\n\nexport const copy = (obj) => JSON.parse(JSON.stringify(obj));\n"]}