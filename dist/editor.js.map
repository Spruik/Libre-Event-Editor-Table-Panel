{"version":3,"sources":["../src/editor.js"],"names":["tablePanelEditor","$q","uiSegmentSrv","restrict","scope","templateUrl","controller","TablePanelEditorCtrl","_","transformers","utils","$scope","editor","panelCtrl","ctrl","panel","fontSizes","addColumnSegment","newPlusButton","updateTransformHints","canSetColumns","columnsHelpMessage","transform","dataRaw","when","columns","getColumns","segments","map","c","newSegment","value","text","column","find","push","render","plusButton","html","refresh","key","influxUrl","influxHost","get","then","res","results","series","measurementOK","alert","console","log","includes","catch","without"],"mappings":"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","file":"editor.js","sourcesContent":["import _ from 'lodash';\nimport { transformers } from './transformers';\nimport * as utils from './utils';\n\nexport class TablePanelEditorCtrl {\n\t/** @ngInject */\n\tconstructor($scope, $q, uiSegmentSrv) {\n\t\t$scope.editor = this;\n\t\tthis.panelCtrl = $scope.ctrl;\n\t\tthis.panel = this.panelCtrl.panel;\n\t\tthis.transformers = transformers;\n\t\tthis.fontSizes = [\n\t\t\t'80%',\n\t\t\t'90%',\n\t\t\t'100%',\n\t\t\t'110%',\n\t\t\t'120%',\n\t\t\t'130%',\n\t\t\t'150%',\n\t\t\t'160%',\n\t\t\t'180%',\n\t\t\t'200%',\n\t\t\t'220%',\n\t\t\t'250%'\n\t\t];\n\t\tthis.addColumnSegment = uiSegmentSrv.newPlusButton();\n\t\tthis.updateTransformHints();\n\t}\n\n\tupdateTransformHints() {\n\t\tthis.canSetColumns = false;\n\t\tthis.columnsHelpMessage = '';\n\n\t\tswitch (this.panel.transform) {\n\t\t\tcase 'timeseries_aggregations': {\n\t\t\t\tthis.canSetColumns = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'json': {\n\t\t\t\tthis.canSetColumns = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 'table': {\n\t\t\t\tthis.columnsHelpMessage = 'Columns and their order are determined by the data query';\n\t\t\t}\n\t\t}\n\t}\n\n\tgetColumnOptions() {\n\t\tif (!this.panelCtrl.dataRaw) {\n\t\t\treturn this.$q.when([]);\n\t\t}\n\t\tconst columns = this.transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n\t\tconst segments = _.map(columns, (c) => this.uiSegmentSrv.newSegment({ value: c.text }));\n\t\treturn this.$q.when(segments);\n\t}\n\n\taddColumn() {\n\t\tconst columns = transformers[this.panel.transform].getColumns(this.panelCtrl.dataRaw);\n\t\tconst column = _.find(columns, { text: this.addColumnSegment.value });\n\n\t\tif (column) {\n\t\t\tthis.panel.columns.push(column);\n\t\t\tthis.render();\n\t\t}\n\n\t\tconst plusButton = this.uiSegmentSrv.newPlusButton();\n\t\tthis.addColumnSegment.html = plusButton.html;\n\t\tthis.addColumnSegment.value = plusButton.value;\n\t}\n\n\ttransformChanged() {\n\t\tthis.panel.columns = [];\n\t\tif (this.panel.transform === 'timeseries_aggregations') {\n\t\t\tthis.panel.columns.push({ text: 'Avg', value: 'avg' });\n\t\t}\n\n\t\tthis.updateTransformHints();\n\t\tthis.render();\n\t}\n\n\trender() {\n\t\tthis.panelCtrl.refresh();\n\t}\n\n\tcheckEndPoint(key) {\n\t\tlet influxUrl = utils.influxHost + `query?pretty=true&db=smart_factory&q=select * from ${key} limit 1`;\n\t\tutils\n\t\t\t.get(influxUrl)\n\t\t\t.then((res) => {\n\t\t\t\tif (!res.results[0].series) {\n\t\t\t\t\tthis.panelCtrl.measurementOK = false;\n\t\t\t\t\tutils.alert(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t'Error',\n\t\t\t\t\t\t\"The measurement you put in the Down Time Panel may be invalid, please make sure it matches the one that's in the query\"\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tconsole.log(res);\n\t\t\t\tif (!res.results[0].series[0].columns.includes('held')) {\n\t\t\t\t\tthis.panelCtrl.measurementOK = false;\n\t\t\t\t\tutils.alert(\n\t\t\t\t\t\t'error',\n\t\t\t\t\t\t'Error',\n\t\t\t\t\t\t\"The measurement you put in the Down Time Panel may be invalid, please make sure it matches the one that's in the query\"\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tutils.alert(\n\t\t\t\t\t'success',\n\t\t\t\t\t'Success',\n\t\t\t\t\t\"The measurement you put in has been tested and it's a valid measurement\"\n\t\t\t\t);\n\t\t\t\tthis.panelCtrl.measurementOK = true;\n\t\t\t})\n\t\t\t.catch(() => {\n\t\t\t\tthis.panelCtrl.measurementOK = false;\n\t\t\t\tutils.alert(\n\t\t\t\t\t'error',\n\t\t\t\t\t'Error',\n\t\t\t\t\t\"The measurement you put in the Down Time Panel may be invalid, please make sure it matches the one that's in the query\"\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t});\n\t}\n\n\tremoveColumn(column) {\n\t\tthis.panel.columns = _.without(this.panel.columns, column);\n\t\tthis.panelCtrl.render();\n\t}\n}\n\n/** @ngInject */\nexport function tablePanelEditor($q, uiSegmentSrv) {\n\t'use strict';\n\treturn {\n\t\trestrict: 'E',\n\t\tscope: true,\n\t\ttemplateUrl: 'public/plugins/smart-factory-event-editor-table-panel/partials/editor.html',\n\t\tcontroller: TablePanelEditorCtrl\n\t};\n}\n"]}